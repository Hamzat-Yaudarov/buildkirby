const SubGram = require('./subgram');

async function testSubgramTasks() {
    const testUserId = 123456789;
    const testChatId = 123456789;
    
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SubGram –∑–∞–¥–∞–Ω–∏–π...\n');
    
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ (–¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏):');
    const subscription = await SubGram.checkSubscription(testUserId, testChatId);
    console.log('MaxOP: 3, action: subscribe');
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', {
        status: subscription.status,
        linksCount: subscription.links?.length || 0,
        links: subscription.links?.slice(0, 3) || []
    });
    
    console.log('\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π:');
    const tasks = await SubGram.getTaskChannels(testUserId, testChatId);
    console.log('MaxOP: 10, action: newtask');
    console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', {
        status: tasks.status,
        linksCount: tasks.links?.length || 0,
        links: tasks.links?.slice(0, 5) || []
    });
    
    console.log('\nüìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ:');
    console.log(`–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞: ${subscription.links?.length || 0} –∫–∞–Ω–∞–ª–æ–≤`);
    console.log(`–ó–∞–¥–∞–Ω–∏—è: ${tasks.links?.length || 0} –∫–∞–Ω–∞–ª–æ–≤`);
    
    if (tasks.links && subscription.links) {
        const uniqueTaskChannels = tasks.links.filter(link => 
            !subscription.links.includes(link)
        );
        console.log(`–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –∑–∞–¥–∞–Ω–∏–π: ${uniqueTaskChannels.length}`);
        console.log('–ù–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã:', uniqueTaskChannels.slice(0, 3));
    }
}

testSubgramTasks().catch(console.error);
