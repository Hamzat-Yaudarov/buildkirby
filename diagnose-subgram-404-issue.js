/**
 * –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å 404 –æ—Ç–≤–µ—Ç–∞–º–∏ –æ—Ç SubGram
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ—á–µ–º—É API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π"
 */

const db = require('./database');
const { subgramAPI } = require('./subgram-api');
const axios = require('axios');

async function diagnoseSubGram404Issue() {
    console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° 404 –û–¢–í–ï–¢–ê–ú–ò SUBGRAM\n');

    try {
        await db.initializeDatabase();
        console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞\n');

        // 1. –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
        console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ SubGram...');
        const settings = await db.getSubGramSettings();
        
        if (!settings) {
            console.log('‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
            return;
        }

        console.log('üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏:', {
            enabled: settings.enabled,
            max_sponsors: settings.max_sponsors,
            api_url: settings.api_url
        });
        console.log('');

        // 2. –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ —Å 404 –æ—Ç–≤–µ—Ç–∞–º–∏
        console.log('2Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ —Å 404 –æ—Ç–≤–µ—Ç–∞–º–∏...');
        const logs404 = await db.executeQuery(`
            SELECT * FROM subgram_api_requests 
            WHERE response_data::text LIKE '%–ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π%' 
            OR response_data::text LIKE '%404%'
            ORDER BY created_at DESC 
            LIMIT 10
        `);

        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${logs404.rows.length} –∑–∞–ø–∏—Å–µ–π —Å –æ—Ç–≤–µ—Ç–∞–º–∏ –æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π`);
        
        if (logs404.rows.length > 0) {
            console.log('\nüìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ 404 –æ—Ç–≤–µ—Ç—ã:');
            logs404.rows.slice(0, 5).forEach((log, index) => {
                const responseData = log.response_data;
                console.log(`${index + 1}. [${log.created_at}] User: ${log.user_id}`);
                console.log(`   –°–æ–æ–±—â–µ–Ω–∏–µ: ${responseData.message || '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è'}`);
                console.log(`   –°—Ç–∞—Ç—É—Å API: ${responseData.status}, –ö–æ–¥: ${responseData.code}`);
                console.log('');
            });
        }

        // 3. –¢–µ—Å—Ç —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        console.log('3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏...');
        const testUsers = [
            '7972065986', // –ê–¥–º–∏–Ω
            '7961237966', // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ –ª–æ–≥–æ–≤
            '123456789',  // –¢–µ—Å—Ç–æ–≤—ã–π
            '999999999'   // –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
        ];

        let hasAvailableSponsors = false;

        for (const testUser of testUsers) {
            console.log(`\nüß™ –¢–µ—Å—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${testUser}:`);
            
            try {
                const response = await axios.post(settings.api_url, {
                    UserId: testUser,
                    ChatId: testUser,
                    MaxOP: 3,
                    action: "subscribe",
                    exclude_channel_ids: []
                }, {
                    headers: {
                        'Auth': settings.api_key,
                        'Content-Type': 'application/json'
                    },
                    timeout: 10000
                });

                console.log(`  ‚úÖ –°—Ç–∞—Ç—É—Å: ${response.data.status}, –ö–æ–¥: ${response.data.code}`);
                console.log(`  üìù –°–æ–æ–±—â–µ–Ω–∏–µ: ${response.data.message || '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è'}`);
                console.log(`  üì∫ –°—Å—ã–ª–æ–∫: ${response.data.links?.length || 0}`);

                if (response.data.links && response.data.links.length > 0) {
                    hasAvailableSponsors = true;
                    console.log(`  üéâ –ù–ê–ô–î–ï–ù–´ –ö–ê–ù–ê–õ–´! –ü–µ—Ä–≤–∞—è —Å—Å—ã–ª–∫–∞: ${response.data.links[0]}`);
                }

            } catch (error) {
                if (error.response && error.response.status === 404) {
                    console.log(`  üì≠ 404: ${error.response.data.message || '–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π'}`);
                } else {
                    console.log(`  ‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
                }
            }
        }

        // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞ –∏ –ø—Ä–∞–≤
        console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞ –∏ –ø—Ä–∞–≤...');
        
        try {
            // –ü—Ä–æ–±—É–µ–º –∑–∞–ø—Ä–æ—Å —Å action = 'newtask'
            const newtaskResponse = await axios.post(settings.api_url, {
                UserId: "7972065986",
                ChatId: "7972065986", 
                MaxOP: 1,
                action: "newtask",
                exclude_channel_ids: []
            }, {
                headers: {
                    'Auth': settings.api_key,
                    'Content-Type': 'application/json'
                },
                timeout: 10000
            });

            console.log('üì§ –¢–µ—Å—Ç —Å action=newtask:');
            console.log(`  –°—Ç–∞—Ç—É—Å: ${newtaskResponse.data.status}`);
            console.log(`  –ö–æ–¥: ${newtaskResponse.data.code}`);
            console.log(`  –°—Å—ã–ª–æ–∫: ${newtaskResponse.data.links?.length || 0}`);

        } catch (newtaskError) {
            console.log('üì§ –¢–µ—Å—Ç —Å action=newtask:');
            if (newtaskError.response) {
                console.log(`  –û—à–∏–±–∫–∞: ${newtaskError.response.status} - ${newtaskError.response.data.message}`);
            } else {
                console.log(`  –û—à–∏–±–∫–∞: ${newtaskError.message}`);
            }
        }

        // 5. –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        console.log('\n5Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:');
        console.log('==========================================');
        
        if (hasAvailableSponsors) {
            console.log('‚úÖ **–ö–ê–ù–ê–õ–´ –ù–ê–ô–î–ï–ùÔøΩÔøΩ:** SubGram —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ø–æ–Ω—Å–æ—Ä—ã!');
            console.log('üîß **–ü—Ä–∏—á–∏–Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã:** –í–æ–∑–º–æ–∂–Ω–æ –∫–∞–Ω–∞–ª—ã –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–µ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
            console.log('üí° **–†–µ—à–µ–Ω–∏–µ:** –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - –±–æ—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å —Å fallback –ª–æ–≥–∏–∫–æ–π');
        } else {
            console.log('üì≠ **–ö–ê–ù–ê–õ–´ –ù–ï –ù–ê–ô–î–ï–ù–´:** –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ø–æ–Ω—Å–æ—Ä—Å–∫–∏—Ö –∫–∞–Ω–∞–ª–æ–≤');
            console.log('üîß **–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:**');
            console.log('   1. –í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π –≤ SubGram');
            console.log('   2. –í–∞—à –±–æ—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤');
            console.log('   3. –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∏–ª–∏ –¥—Ä—É–≥–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è');
            console.log('   4. –í—Ä–µ–º—è —Å—É—Ç–æ–∫ –≤–ª–∏—è–µ—Ç –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–∞–Ω–∞–ª–æ–≤');
        }

        console.log('\nüìä **–°–¢–ê–¢–ò–°–¢–ò–ö–ê 404 –û–¢–í–ï–¢–û–í:**');
        const total404 = logs404.rows.length;
        const recentLogs = await db.executeQuery(`
            SELECT COUNT(*) as total FROM subgram_api_requests 
            WHERE created_at > NOW() - INTERVAL '24 hours'
        `);
        const totalRequests = recentLogs.rows[0]?.total || 0;
        
        if (totalRequests > 0) {
            const percent404 = ((total404 / totalRequests) * 100).toFixed(1);
            console.log(`‚Ä¢ 404 –æ—Ç–≤–µ—Ç–æ–≤ –∑–∞ 24—á: ${total404} –∏–∑ ${totalRequests} (${percent404}%)`);
            
            if (percent404 > 80) {
                console.log('üìà **–í–´–°–û–ö–ò–ô –ü–†–û–¶–ï–ù–¢ 404** - –≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ—Ç —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π');
            } else {
                console.log('üìà **–£–ú–ï–†–ï–ù–ù–´–ô –ü–†–û–¶–ï–ù–¢ 404** - —á–∞—Å—Ç–∏—á–Ω–æ –µ—Å—Ç—å –∫–∞–Ω–∞–ª—ã');
            }
        }

        // 6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        console.log('\n6Ô∏è‚É£ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
        console.log('==========================================');
        
        console.log('üéØ **–ù–ï–ú–ï–î–õ–ï–ù–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø:**');
        if (!hasAvailableSponsors) {
            console.log('1. ‚úÖ –ö–æ–¥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω - 404 —Ç–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç');
            console.log('2. ‚úÖ Fallback —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
            console.log('3. ‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏');
            console.log('4. üìû –°–≤ÔøΩÔøΩ–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π SubGram –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π');
        } else {
            console.log('1. ‚úÖ SubGram —Ä–∞–±–æ—Ç–∞–µ—Ç - –∫–∞–Ω–∞–ª—ã –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
            console.log('2. ‚úÖ –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ - –Ω–µ –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—é—Ç –∫–∞–Ω–∞–ª—ã');
            console.log('3. ‚úÖ Fallback —Å–∏—Å—Ç–µ–º–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–∞–Ω–∞–ª–æ–≤');
        }

        console.log('\nüîß **–î–û–õ–ì–û–°–†–û–ß–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø:**');
        console.log('1. –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç 404 –æ—Ç–≤–µ—Ç–æ–≤');
        console.log('2. –ï—Å–ª–∏ 404 > 90% –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è - –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ SubGram');
        console.log('3. –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤');
        console.log('4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –≤ SubGram –ø–∞–Ω–µ–ª–∏');

        console.log('\n‚úÖ **–¢–ï–ö–£–©–ò–ô –°–¢–ê–¢–£–°:**');
        console.log('‚Ä¢ –ö–æ–¥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ 404');
        console.log('‚Ä¢ Fallback —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
        console.log('ÔøΩÔøΩ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ –¥–∞–∂–µ –±–µ–∑ —Å–ø–æ–Ω—Å–æ—Ä–æ–≤');
        console.log('‚Ä¢ 404 "–Ω–µ—Ç —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π" –±–æ–ª—å—à–µ –Ω–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ—à–∏–±–∫–æ–π');

    } catch (error) {
        console.error('\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
        console.error('üìç –°—Ç–µ–∫:', error.stack);
    } finally {
        await db.closeConnection();
        console.log('\nüîí –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∑–∞–∫—Ä—ã—Ç–æ');
    }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    diagnoseSubGram404Issue();
}

module.exports = { diagnoseSubGram404Issue };
