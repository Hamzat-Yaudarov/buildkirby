const XLSX = require('xlsx');
const fs = require('fs');
const path = require('path');

function checkXlsxData() {
    const dataDir = './xlsx-data';
    
    if (!fs.existsSync(dataDir)) {
        console.log('‚ùå –ü–∞–ø–∫–∞ xlsx-data –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        return;
    }
    
    const files = fs.readdirSync(dataDir).filter(f => f.endsWith('.xlsx'));
    console.log(`üìÅ –ù–∞–π–¥–µ–Ω–æ ${files.length} xlsx —Ñ–∞–π–ª–æ–≤:\n`);
    
    files.forEach(file => {
        try {
            const filePath = path.join(dataDir, file);
            const workbook = XLSX.readFile(filePath);
            const sheetName = workbook.SheetNames[0];
            const worksheet = workbook.Sheets[sheetName];
            const data = XLSX.utils.sheet_to_json(worksheet);
            
            console.log(`üìä ${file}:`);
            console.log(`   –ó–∞–ø–∏—Å–µ–π: ${data.length}`);
            
            if (data.length > 0) {
                const firstRow = data[0];
                console.log(`   –ü–æ–ª—è: ${Object.keys(firstRow).join(', ')}`);
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞—Ç—ã –µ—Å–ª–∏ –µ—Å—Ç—å
                if (firstRow.created_at) {
                    console.log(`   –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–π –∑–∞–ø–∏—Å–∏: ${firstRow.created_at}`);
                }
                if (data.length > 1) {
                    const lastRow = data[data.length - 1];
                    if (lastRow.created_at) {
                        console.log(`   –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å–∏: ${lastRow.created_at}`);
                    }
                }
            }
            console.log('');
            
        } catch (error) {
            console.log(`‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è ${file}: ${error.message}\n`);
        }
    });
}

checkXlsxData();
