const { Pool } = require('pg');
const config = require('./config');

const pool = new Pool({
    connectionString: config.DATABASE_URL,
    ssl: { rejectUnauthorized: false }
});

async function diagnoseUsers() {
    try {
        console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° 13 –¢–´–°–Ø–ß–ê–ú–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô\n');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î
        const totalUsers = await pool.query('SELECT COUNT(*) as count FROM users');
        console.log(`üë• –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î: ${totalUsers.rows[0].count}\n`);

        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const recentUsers = await pool.query(`
            SELECT user_id, first_name, language_code, captcha_passed, referral_completed, created_at
            FROM users 
            ORDER BY created_at DESC 
            LIMIT 10
        `);

        console.log('üìÖ –ü–û–°–õ–ï–î–ù–ò–ï 10 –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:');
        recentUsers.rows.forEach((user, index) => {
            const date = new Date(user.created_at).toLocaleDateString('ru-RU');
            const time = new Date(user.created_at).toLocaleTimeString('ru-RU');
            console.log(`${index + 1}. ${user.first_name} (${user.user_id})`);
            console.log(`   üìÖ –î–∞—Ç–∞: ${date} ${time}`);
            console.log(`   üåê –Ø–∑—ã–∫: ${user.language_code}`);
            console.log(`   ü§ñ –ö–∞–ø—á–∞: ${user.captcha_passed ? '‚úÖ' : '‚ùå'}`);
            console.log(`   üë• –†–µ—Ñ–µ—Ä–∞–ª: ${user.referral_completed ? '‚úÖ' : '‚ùå'}\n`);
        });

        // –ê–Ω–∞–ª–∏–∑ –ø–æ —è–∑—ã–∫–∞–º
        const languageStats = await pool.query(`
            SELECT language_code, COUNT(*) as count
            FROM users 
            GROUP BY language_code 
            ORDER BY count DESC
        `);

        console.log('üåê –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ü–û –Ø–ó–´–ö–ê–ú:');
        languageStats.rows.forEach(stat => {
            const blocked = config.BLOCKED_LANGUAGE_CODES.includes(stat.language_code);
            const status = blocked ? 'üö´ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù' : '‚úÖ –†–ê–ó–†–ï–®–ï–ù';
            console.log(`   ${stat.language_code}: ${stat.count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (${status})`);
        });

        // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const blockedStats = await pool.query(`
            SELECT COUNT(*) as count
            FROM users 
            WHERE language_code = ANY($1)
        `, [config.BLOCKED_LANGUAGE_CODES]);

        console.log(`\nüö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${blockedStats.rows[0].count}`);

        // –ê–Ω–∞–ª–∏–∑ –∫–∞–ø—á–∏
        const captchaStats = await pool.query(`
            SELECT 
                captcha_passed,
                COUNT(*) as count
            FROM users 
            GROUP BY captcha_passed
        `);

        console.log('\nü§ñ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ö–ê–ü–ß–ò:');
        captchaStats.rows.forEach(stat => {
            const status = stat.captcha_passed ? '–ü—Ä–æ—à–ª–∏ –∫–∞–ø—á—É' : '–ù–ï –ø—Ä–æ—à–ª–∏ –∫–∞–ø—á—É';
            console.log(`   ${status}: ${stat.count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
        });

        // –ê–Ω–∞–ª–∏–∑ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        const referralStats = await pool.query(`
            SELECT 
                referral_completed,
                COUNT(*) as count
            FROM users 
            GROUP BY referral_completed
        `);

        console.log('\nüë• –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ê–ö–¢–ò–í–ê–¶–ò–ò –†–ï–§–ï–†–ê–õ–û–í:');
        referralStats.rows.forEach(stat => {
            const status = stat.referral_completed ? '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã' : '–ù–ï –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã';
            console.log(`   ${status}: ${stat.count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
        });

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        const dateStats = await pool.query(`
            SELECT 
                DATE(created_at) as date,
                COUNT(*) as count
            FROM users 
            WHERE created_at >= CURRENT_DATE - INTERVAL '7 days'
            GROUP BY DATE(created_at)
            ORDER BY date DESC
        `);

        console.log('\nüìä –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –ó–ê –ü–û–°–õ–ï–î–ù–ò–ï 7 –î–ù–ï–ô:');
        if (dateStats.rows.length === 0) {
            console.log('   ‚ùå –ù–µ—Ç –Ω–æ–≤—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π');
        } else {
            dateStats.rows.forEach(stat => {
                console.log(`   ${stat.date}: ${stat.count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
            });
        }

        console.log('\nüîç –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´ –ü–û–¢–ï–†–ò 13,000 –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:\n');

        console.log('1. ü§ñ –ö–ê–ü–ß–ê - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–ª–∂–Ω—ã –ø—Ä–æ–π—Ç–∏ –∫–∞–ø—á—É –ü–ï–†–ï–î —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ –ë–î');
        console.log('   ‚ùå –ù–µ –ø—Ä–æ—à–ª–∏ –∫–∞–ø—á—É = –ù–ï —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –≤ –ë–î');

        console.log('\n2. üì¢ –°–ü–û–ù–°–û–†–°–ö–ò–ï –ö–ê–ù–ê–õ–´ - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è');
        console.log('   ‚ùå –ù–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å = –ù–ï –ø–æ–ª—É—á–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É');

        console.log('\n3. üö´ –ë–õ–û–ö–ò–†–û–í–ö–ê –ü–û –Ø–ó–´–ö–ê–ú - ar –∏ fa –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã');
        console.log(`   üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —è–∑—ã–∫–∏: ${config.BLOCKED_LANGUAGE_CODES.join(', ')}`);

        console.log('\n4. üîÑ –ó–ê–©–ò–¢–ê –û–¢ –°–ü–ê–ú–ê - –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ /start –∏–≥–Ω–æ—Ä–∏—Ä—É—é—Ç—Å—è');
        console.log('   ‚è±Ô∏è –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏: 3 —Å–µ–∫—É–Ω–¥—ã');

        console.log('\n5. üíî –û–®–ò–ë–ö–ò –ë–î - –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–±–æ–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');

        console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –£–í–ï–õ–ò–ß–ï–ù–ò–Ø –ö–û–ù–í–ï–†–°–ò–ò:');
        console.log('‚Ä¢ –£–ø—Ä–æ—Å—Ç–∏—Ç—å –∏–ª–∏ —É–±—Ä–∞—Ç—å –∫–∞–ø—á—É');
        console.log('‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –î–û –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏');
        console.log('‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É –æ—Ç–∫–∞–∑–æ–≤ –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ');
        console.log('‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error);
    } finally {
        await pool.end();
    }
}

diagnoseUsers();
