#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏ Telegram –∞–≥–µ–Ω—Ç–∞
–ó–∞–ø—É—Å—Ç–∏—Ç–µ –õ–û–ö–ê–õ–¨–ù–û –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ —Å–µ—Å—Å–∏–∏, –∑–∞—Ç–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–∞ Railway
"""

import asyncio
import os
from pyrogram import Client

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API (—Ç–∞ –∂–µ —á—Ç–æ –≤ userbot-agent.py)
API_CONFIG = {
    "api_id": 28085629,
    "api_hash": "78027b2ae19b9ec44a6e03bf5cc1299f",
    "phone_number": "+7972065986",
    "username": "kirbystarsagent"
}

async def create_session():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è userbot –∞–≥–µ–Ω—Ç–∞"""
    print("üîê –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è Telegram Userbot Agent")
    print(f"üì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {API_CONFIG['phone_number']}")
    print("‚ö†Ô∏è  –í–ê–ñ–ù–û: –ó–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –õ–û–ö–ê–õ–¨–ù–û, –Ω–µ –Ω–∞ Railway!")
    print()

    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    app = Client(
        "userbot_session",
        api_id=API_CONFIG["api_id"],
        api_hash=API_CONFIG["api_hash"],
        phone_number=API_CONFIG["phone_number"]
    )

    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç (—ç—Ç–æ –ø–æ–ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –∫–æ–¥)
        await app.start()
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
        me = await app.get_me()
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!")
        print(f"üë§ –ò–º—è: {me.first_name}")
        print(f"üì± Username: @{me.username}")
        print(f"üÜî ID: {me.id}")
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        await app.stop()
        
        print()
        print("‚úÖ –°–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("üìÅ –§–∞–π–ª —Å–µ—Å—Å–∏–∏: userbot_session.session")
        print()
        print("üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª userbot_session.session –≤ –≤–∞—à Railway –ø—Ä–æ–µ–∫—Ç")
        print("2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –¥–µ–ø–ª–æ–π –Ω–∞ Railway")
        print("3. –ê–≥–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏ —Å–æ–∑–¥–∞–Ω
        if os.path.exists("userbot_session.session"):
            file_size = os.path.getsize("userbot_session.session")
            print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ —Å–µ—Å—Å–∏–∏: {file_size} –±–∞–π—Ç")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        print()
        print("üîß –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:")
        print("- –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
        print("- –ù–æ–º–µ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
        print("- –ù–µ–≤–µ—Ä–Ω—ã–µ API –∫–ª—é—á–∏")
        print("- –¢—Ä–µ–±—É–µ—Ç—Å—è 2FA –∫–æ–¥")
        
        return False

    return True

async def check_existing_session():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–µ—Å—Å–∏–∏"""
    if not os.path.exists("userbot_session.session"):
        print("‚ùå –§–∞–π–ª —Å–µ—Å—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    print("üìÅ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª —Å–µ—Å—Å–∏–∏, –ø—Ä–æ–≤–µ—Ä—è–µ–º...")
    
    try:
        app = Client(
            "userbot_session",
            api_id=API_CONFIG["api_id"],
            api_hash=API_CONFIG["api_hash"]
        )
        
        await app.start()
        me = await app.get_me()
        
        print(f"‚úÖ –°–µ—Å—Å–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print(f"üë§ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫: {me.first_name} (@{me.username})")
        
        await app.stop()
        return True
        
    except Exception as e:
        print(f"‚ùå –°–µ—Å—Å–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ –°–û–ó–î–ê–ù–ò–ï –°–ï–°–°–ò–ò TELEGRAM USERBOT AGENT")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–µ—Å—Å–∏—é
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–µ—Å—Å–∏–∏...")
    
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    
    try:
        session_exists = loop.run_until_complete(check_existing_session())
        
        if session_exists:
            print()
            print("‚úÖ –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ä–∞–±–æ—á–∞—è —Å–µ—Å—Å–∏—è!")
            print("üìÅ –ü—Ä–æ—Å—Ç–æ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª userbot_session.session –Ω–∞ Railway")
        else:
            print()
            print("üîê –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏...")
            success = loop.run_until_complete(create_session())
            
            if not success:
                print()
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–µ—Å—Å–∏—é")
                print("üí° –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é")
    
    finally:
        loop.close()

if __name__ == "__main__":
    main()
