/**
 * –†–æ—É—Ç–µ—Ä –¥–ª—è callback –∑–∞–ø—Ä–æ—Å–æ–≤
 * –ó–∞–º–µ–Ω—è–µ—Ç –æ–≥—Ä–æ–º–Ω—ã–π switch (—Å—Ç—Ä–æ–∫–∏ 2268-2858) –≤ index.js
 */

const userHandlers = require('./handlers/user-handlers');
const { requireAdmin, requireUser, withErrorHandling } = require('./middlewares');

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback –¥–∞–Ω–Ω—ã—Ö
 * @param {Object} bot - —ç–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞  
 * @param {Object} dependencies - –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (db, –∏ —Ç.–¥.)
 * @returns {Function} —Ñ—É–Ω–∫—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞
 */
function createCallbackRouter(bot, dependencies) {
    const { db } = dependencies;

    // –ö–∞—Ä—Ç–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ callback
    const handlers = new Map();

    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    handlers.set('main_menu', userHandlers.handleMainMenu);
    handlers.set('profile', userHandlers.handleProfile);
    handlers.set('clicker', userHandlers.handleClicker);
    handlers.set('instruction', userHandlers.handleInstruction);
    handlers.set('ratings', userHandlers.handleRatings);
    handlers.set('ratings_all', userHandlers.handleRatingsAll);
    handlers.set('ratings_week', userHandlers.handleRatingsWeek);
    handlers.set('ratings_week_points', userHandlers.handleRatingsWeekPoints);

    // –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –±—É–¥—É—â–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    handlers.set('invite', createPlaceholderHandler('–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π'));
    handlers.set('withdraw', createPlaceholderHandler('–§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –∑–≤—ë–∑–¥'));
    handlers.set('tasks', createPlaceholderHandler('–§—É–Ω–∫—Ü–∏—è –∑–∞–¥–∞–Ω–∏–π'));
    handlers.set('lottery', createPlaceholderHandler('–§—É–Ω–∫—Ü–∏—è –ª–æ—Ç–µ—Ä–µ–π'));
    handlers.set('cases', createPlaceholderHandler('–§—É–Ω–∫—Ü–∏—è –∫–µ–π—Å–æ–≤'));
    handlers.set('promocode', createPlaceholderHandler('–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤'));

    // –ê–¥–º–∏–Ω—Å–∫–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø—Ä–∞–≤)
    handlers.set('admin', requireAdmin(createPlaceholderHandler('–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å')));
    handlers.set('admin_stats', requireAdmin(createPlaceholderHandler('–ê–¥–º–∏–Ω—Å–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')));
    handlers.set('admin_tasks', requireAdmin(createPlaceholderHandler('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è–º–∏')));
    handlers.set('admin_channels', requireAdmin(createPlaceholderHandler('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏')));
    handlers.set('admin_lottery', requireAdmin(createPlaceholderHandler('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ—Ç–µ—Ä–µ—è–º–∏')));
    handlers.set('admin_promocodes', requireAdmin(createPlaceholderHandler('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏')));
    handlers.set('admin_broadcast', requireAdmin(createPlaceholderHandler('–†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π')));
    handlers.set('admin_weekly_rewards', requireAdmin(createPlaceholderHandler('–ù–µ–¥–µ–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã')));
    handlers.set('admin_subgram', requireAdmin(createPlaceholderHandler('SubGram —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ')));
    handlers.set('admin_withdrawals', requireAdmin(createPlaceholderHandler('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≤–æ–¥–æ–º')));
    handlers.set('admin_subscription_stats', requireAdmin(createPlaceholderHandler('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫')));

    // SubGram –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    handlers.set('check_subscriptions_enhanced', createPlaceholderHandler('–£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫'));
    handlers.set('subgram_check', createPlaceholderHandler('–ü—Ä–æ–≤–µ—Ä–∫–∞ SubGram'));
    handlers.set('subgram-op', createPlaceholderHandler('–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ SubGram'));
    handlers.set('subgram_gender_male', createPlaceholderHandler('–í—ã–±–æ—Ä –º—É–∂—Å–∫–æ–≥–æ –ø–æ–ª–∞'));
    handlers.set('subgram_gender_female', createPlaceholderHandler('–í—ã–±–æ—Ä –∂–µ–Ω—Å–∫–æ–≥–æ –ø–æ–ª–∞'));

    /**
     * –°–æ–∑–¥–∞–µ—Ç –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
     * @param {string} feature - –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
     * @returns {Function} –æ–±—Ä–∞–±–æ—Ç—á–∏–∫-–∑–∞–≥–ª—É—à–∫–∞
     */
    function createPlaceholderHandler(feature) {
        return async (chatId, messageId, userId, callbackData, user) => {
            const { editMessage } = require('./message-utils');
            const { keyboards } = require('./keyboards');
            
            await editMessage(bot, chatId, messageId, 
                `üöß **${feature}**\n\n–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n\nüí° –°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!`,
                { keyboard: keyboards.getBackToMainKeyboard().reply_markup.inline_keyboard }
            );
        };
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ callback (—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏)
     * @param {string} callbackData - –¥–∞–Ω–Ω—ã–µ callback
     * @param {number} chatId - ID —á–∞—Ç–∞  
     * @param {number} messageId - ID —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {number} userId - ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param {Object} user - –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @returns {boolean} true –µ—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
     */
    async function handleDynamicCallback(callbackData, chatId, messageId, userId, user) {
        const { editMessage } = require('./message-utils');
        const { keyboards } = require('./keyboards');

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        if (callbackData.startsWith('task_check_')) {
            const taskId = callbackData.replace('task_check_', '');
            await editMessage(bot, chatId, messageId, 
                `üîç **–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–¥–∞–Ω–∏—è #${taskId}**\n\n–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–¥–∞–Ω–∏–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.`,
                { keyboard: keyboards.getBackToMainKeyboard().reply_markup.inline_keyboard }
            );
            return true;
        }

        if (callbackData.startsWith('lottery_buy_')) {
            const lotteryId = callbackData.replace('lottery_buy_', '');
            await editMessage(bot, chatId, messageId, 
                `üé∞ **–ü–æ–∫—É–ø–∫–∞ –±–∏–ª–µ—Ç–∞ –ª–æ—Ç–µ—Ä–µ–∏ #${lotteryId}**\n\n–§—É–Ω–∫—Ü–∏—è –ª–æ—Ç–µ—Ä–µ–π –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.`,
                { keyboard: keyboards.getBackToMainKeyboard().reply_markup.inline_keyboard }
            );
            return true;
        }

        if (callbackData.startsWith('withdraw_')) {
            const amount = callbackData.replace('withdraw_', '');
            await editMessage(bot, chatId, messageId, 
                `üí∏ **–í—ã–≤–æ–¥ ${amount} –∑–≤—ë–∑–¥**\n\n–§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.`,
                { keyboard: keyboards.getBackToMainKeyboard().reply_markup.inline_keyboard }
            );
            return true;
        }

        if (callbackData.startsWith('ref_lottery_')) {
            const action = callbackData.split('_')[2];
            const lotteryId = callbackData.split('_')[3];
            await editMessage(bot, chatId, messageId, 
                `üéØ **–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ª–æ—Ç–µ—Ä–µ—è #${lotteryId}**\n\n–î–µ–π—Å—Ç–≤–∏–µ: ${action}\n\n–§—É–Ω–∫—Ü–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.`,
                { keyboard: keyboards.getBackToMainKeyboard().reply_markup.inline_keyboard }
            );
            return true;
        }

        if (callbackData.startsWith('admin_')) {
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ callback
            await editMessage(bot, chatId, messageId, 
                `‚öôÔ∏è **–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è**\n\nCallback: ${callbackData}\n\n–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.`,
                { keyboard: keyboards.getBackToMainKeyboard().reply_markup.inline_keyboard }
            );
            return true;
        }

        return false; // –ù–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
    }

    /**
     * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞
     * @param {Object} callbackQuery - –æ–±—ä–µ–∫—Ç callback query
     * @returns {Promise<boolean>} true –µ—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ
     */
    async function route(callbackQuery) {
        const { message: msg, data: callbackData, from: { id: userId } } = callbackQuery;
        const { chat: { id: chatId }, message_id: messageId } = msg;

        try {
            // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const user = await db.getUser(userId);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            if (handlers.has(callbackData)) {
                const handler = handlers.get(callbackData);
                await handler(chatId, messageId, userId, callbackData, user);
                return true;
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            const dynamicHandled = await handleDynamicCallback(callbackData, chatId, messageId, userId, user);
            if (dynamicHandled) {
                return true;
            }

            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö callback
            const { editMessage } = require('./message-utils');
            const { keyboards } = require('./keyboards');
            
            console.warn('Unknown callback data:', callbackData);
            await editMessage(bot, chatId, messageId, 
                `‚ùì **–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞**\n\nCallback: \`${callbackData}\`\n\n–í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –µ—â—ë –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.`,
                { keyboard: keyboards.getBackToMainKeyboard().reply_markup.inline_keyboard }
            );
            
            return true;

        } catch (error) {
            console.error('Error in callback router:', error);
            
            try {
                const { sendErrorMessage } = require('./message-utils');
                await sendErrorMessage(bot, chatId, messageId, '–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã');
            } catch (sendError) {
                console.error('Error sending error message:', sendError);
            }
            
            return false;
        }
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
     * @param {string} callbackData - –¥–∞–Ω–Ω—ã–µ callback
     * @param {Function} handler - –æÔøΩÔøΩ—Ä–∞–±–æ—Ç—á–∏–∫
     */
    function addHandler(callbackData, handler) {
        handlers.set(callbackData, handler);
    }

    /**
     * –£–¥–∞–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
     * @param {string} callbackData - –¥–∞–Ω–Ω—ã–µ callback
     */
    function removeHandler(callbackData) {
        handlers.delete(callbackData);
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
     * @returns {Array} –º–∞—Å—Å–∏–≤ callback –¥–∞–Ω–Ω—ã—Ö
     */
    function getHandlers() {
        return Array.from(handlers.keys());
    }

    return {
        route,
        addHandler,
        removeHandler,
        getHandlers
    };
}

module.exports = { createCallbackRouter };
