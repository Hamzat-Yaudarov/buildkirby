#!/usr/bin/env python3
"""
–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram Stars
"""

import asyncio
from pyrogram import Client
from pyrogram.raw import functions
import inspect

# API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_CONFIG = {
    "api_id": 28085629,
    "api_hash": "78027b2ae19b9ec44a6e03bf5cc1299f",
    "phone_number": "+79639887777"
}

async def investigate_stars_api():
    """–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ –∑–≤—ë–∑–¥–∞–º–∏"""
    
    print("üîç –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï TELEGRAM STARS API\n")
    
    try:
        app = Client(
            "userbot_session",
            api_id=API_CONFIG["api_id"],
            api_hash=API_CONFIG["api_hash"]
        )
        
        await app.start()
        me = await app.get_me()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫–∞–∫: {me.first_name} (@{me.username})")
        
        # 1. –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ payments –º–æ–¥—É–ª—è
        print("\nüí≥ –î–û–°–¢–£–ü–ù–´–ï PAYMENT –ú–ï–¢–û–î–´:")
        
        try:
            import pyrogram.raw.functions.payments as payments
            payment_methods = [method for method in dir(payments) if not method.startswith('_')]
            
            for method in payment_methods:
                print(f"   üìù {method}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ payments: {e}")
        
        # 2. –ü–æ–∏—Å–∫ –º–µ—Ç–æ–¥–æ–≤ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å–æ –∑–≤—ë–∑–¥–∞–º–∏
        print("\n‚≠ê –ü–û–ò–°–ö –ú–ï–¢–û–î–û–í –°–û –ó–í–Å–ó–î–ê–ú–ò:")
        
        try:
            all_functions = []
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –º–æ–¥—É–ª–∏
            modules_to_check = [
                'pyrogram.raw.functions.payments',
                'pyrogram.raw.functions.messages', 
                'pyrogram.raw.functions.users',
                'pyrogram.raw.functions.channels'
            ]
            
            for module_name in modules_to_check:
                try:
                    module = __import__(module_name, fromlist=[''])
                    methods = [method for method in dir(module) if not method.startswith('_')]
                    
                    for method in methods:
                        if 'star' in method.lower() or 'gift' in method.lower():
                            print(f"   üåü {module_name}.{method}")
                            
                except ImportError:
                    print(f"   ‚ùå –ú–æ–¥—É–ª—å {module_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
        
        # 3. –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞–π—Ç–∏ gift –º–µ—Ç–æ–¥—ã
        print("\nüéÅ –ü–û–ò–°–ö GIFT –ú–ï–¢–û–î–û–í:")
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º Bot API –º–µ—Ç–æ–¥—ã (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã)
            if hasattr(app, 'send_gift'):
                print("   ‚úÖ app.send_gift –¥–æ—Å—Ç—É–ø–µ–Ω")
            else:
                print("   ‚ùå app.send_gift –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
            potential_methods = [
                'send_stars',
                'send_gift', 
                'gift_stars',
                'transfer_stars',
                'send_payment'
            ]
            
            for method in potential_methods:
                if hasattr(app, method):
                    print(f"   ‚úÖ app.{method} –¥–æ—Å—Ç—É–ø–µ–Ω")
                else:
                    print(f"   ‚ùå app.{method} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ—Ç–æ–¥–æ–≤: {e}")
        
        # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∞–∫–∫–∞—É–Ω—Ç–∞
        print(f"\nüë§ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –ê–ö–ö–ê–£–ù–¢–ï:")
        print(f"   üÜî ID: {me.id}")
        print(f"   üì± Username: @{me.username}")
        print(f"   ü§ñ Is Bot: {me.is_bot}")
        print(f"   ‚≠ê Is Premium: {getattr(me, 'is_premium', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        
        # 5. –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ —Ä–∞–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã
        print(f"\nüß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–ï–¢–û–î–û–í –û–¢–ü–†–ê–í–ö–ò:")
        
        # –ú–µ—Ç–æ–¥ 1: –ß–µ—Ä–µ–∑ Bot API (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
        try:
            # –≠—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –±–æ—Ç–æ–≤, –Ω–æ –ø—Ä–æ–≤–µ—Ä–∏–º
            result = await app.send_message(me.id, "üåü –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥–∞—Ä–∫–∞")
            print("   ‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç")
            await result.delete()
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        
        # –ú–µ—Ç–æ–¥ 2: –ß–µ—Ä–µ–∑ MTProto raw API
        try:
            # –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∑–≤—ë–∑–¥
            print("   üîç –ü–æ–∏—Å–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ MTProto –º–µ—Ç–æ–¥–∞...")
            
            # –í–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã API
            potential_apis = [
                'payments.SendStarsForm',
                'payments.SendGift', 
                'payments.SendPayment',
                'messages.SendGift',
                'users.SendGift'
            ]
            
            for api in potential_apis:
                try:
                    module_name, method_name = api.split('.')
                    module = getattr(functions, module_name)
                    if hasattr(module, method_name):
                        print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω: {api}")
                    else:
                        print(f"   ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω: {api}")
                except Exception:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {api}")
                    
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è MTProto: {e}")
        
        await app.stop()
        
        # 6. –í—ã–≤–æ–¥—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print(f"\nüí° –í–´–í–û–î–´:")
        print("1. Telegram Stars - –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –Ω–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è")
        print("2. API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ userbot –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω")
        print("3. –í–æ–∑–º–æ–∂–Ω–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Bot API –≤–º–µ—Å—Ç–æ User API")
        print("4. –ò–ª–∏ API –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ Pyrogram")
        
        print(f"\nüéØ –í–û–ó–ú–û–ñ–ù–´–ï –†–ï–®–ï–ù–ò–Ø:")
        print("1. ü§ñ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Bot API —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç")
        print("2. üì± –ù–∞–π—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π API –º–µ—Ç–æ–¥ –≤ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ Pyrogram")
        print("3. üîÑ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å –æ—Å–Ω–æ–≤–Ω—ã–º –±–æ—Ç–æ–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏")
        print("4. üìû –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Telegram Bot API –Ω–∞–ø—Ä—è–º—É—é")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üî¨ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ Telegram Stars API\n")
    
    result = asyncio.run(investigate_stars_api())
    
    if result:
        print("\nüéâ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    else:
        print("\n‚ùå –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
