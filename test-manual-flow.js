/**
 * –†—É—á–Ω–æ–π —Ç–µ—Å—Ç –ø–æ—ç—Ç–∞–ø–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã - –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
 */

console.log('üß™ –†—É—á–Ω–æ–π —Ç–µ—Å—Ç –ø–æ—ç—Ç–∞–ø–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–ø–∏—Å–æ–∫');
console.log('==========================================\n');

// –ü—Ä–æ–≤–µ—Ä–∏–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
try {
    const db = require('./database');
    console.log('‚úÖ database.js - –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω');
} catch (error) {
    console.log('‚ùå database.js - –æ—à–∏–±–∫–∞:', error.message);
}

try {
    const subscriptionFlow = require('./subscription-flow-manager');
    console.log('‚úÖ subscription-flow-manager.js - –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–π
    console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:');
    console.log('   - SUBSCRIPTION_STAGES:', Object.keys(subscriptionFlow.SUBSCRIPTION_STAGES || {}));
    console.log('   - getCurrentSubscriptionStage:', typeof subscriptionFlow.getCurrentSubscriptionStage);
    console.log('   - formatStageMessage:', typeof subscriptionFlow.formatStageMessage);
    console.log('   - canUserAccessBot:', typeof subscriptionFlow.canUserAccessBot);
    
} catch (error) {
    console.log('‚ùå subscription-flow-manager.js - –æ—à–∏–±–∫–∞:', error.message);
    console.log('Stack:', error.stack);
}

try {
    const { subgramAPI } = require('./subgram-api');
    console.log('‚úÖ subgram-api.js - –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω');
} catch (error) {
    console.log('‚ùå subgram-api.js - –æ—à–∏–±–∫–∞:', error.message);
}

console.log('\nüéØ –í—Å–µ –∫–ª—é—á–µ–≤—ã–µ –º–æ–¥—É–ª–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã');
console.log('‚ú® –ü–æ—ç—Ç–∞–ø–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ –±–æ—Ç–∞');

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
console.log('\nüìä –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —ç—Ç–∞–ø–æ–≤ –ø–æ–¥–ø–∏—Å–∫–∏:');
console.log('1. SPONSORS - –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–ø–æ–Ω—Å–æ—Ä—Å–∫–∏–µ –∫–∞–Ω–∞–ª—ã –æ—Ç SubGram');
console.log('2. REQUIRED - –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –∏–∑ –ë–î');
console.log('3. COMPLETED - –í—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã, –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –æ—Ç–∫—Ä—ã—Ç');

console.log('\nüîí –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π:');
console.log('- –í—Å–µ –≤–∞–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –±–ª–æ–∫–∏—Ä—É—é—Ç—Å—è –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –í–°–ï–• –ø–æ–¥–ø–∏—Å–æ–∫');
console.log('- –†–∞–∑—Ä–µ—à–µ–Ω—ã —Ç–æ–ª—å–∫–æ: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫, –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –∫–∞–ø—á–∞');
console.log('- –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö —ç—Ç–∞–ø–æ–≤ - –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º');

console.log('\nüåü –ù–æ–≤—ã–π flow –∫–æ–º–∞–Ω–¥—ã /start:');
console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–ø—á–∏');
console.log('2. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —ç—Ç–∞–ø–∞ –ø–æ–¥–ø–∏—Å–∫–∏');
console.log('3. –ü–æ–∫–∞–∑ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ—ç—Ç–∞–ø–Ω–æ');
console.log('4. –ü–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å–æ–∫ - –ø–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é');

console.log('\n‚úÖ –†—É—á–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
