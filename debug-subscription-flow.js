/**
 * –û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—ç—Ç–∞–ø–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–ø–∏—Å–æ–∫
 */

console.log('üîç –û—Ç–ª–∞–¥–∫–∞ –ø–æ—ç—Ç–∞–ø–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–ø–∏—Å–æ–∫\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –º–æ–¥—É–ª–µ–π
try {
    const subscriptionFlow = require('./subscription-flow-manager');
    console.log('‚úÖ subscription-flow-manager.js –∑–∞–≥—Ä—É–∂–µ–Ω');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
    console.log('üìã –≠—Ç–∞–ø—ã –ø–æ–¥–ø–∏—Å–∫–∏:', subscriptionFlow.SUBSCRIPTION_STAGES);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–π
    const functions = [
        'getCurrentSubscriptionStage',
        'getSponsorChannels', 
        'getRequiredChannels',
        'formatStageMessage',
        'canUserAccessBot',
        'updateSubscriptionStage'
    ];
    
    console.log('\nüîß –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:');
    functions.forEach(func => {
        const type = typeof subscriptionFlow[func];
        console.log(`   ${func}: ${type}`);
        if (type !== 'function') {
            console.log(`   ‚ùå –û–®–ò–ë–ö–ê: ${func} –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ñ—É–Ω–∫—Ü–∏–µ–π!`);
        }
    });
    
} catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ subscription-flow-manager:', error.message);
    console.log('Stack:', error.stack);
}

console.log('\nüéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ —ç—Ç–∞–ø–æ–≤:');

// –°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–∑–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
const testScenarios = [
    {
        name: '–ï—Å—Ç—å —Å–ø–æ–Ω—Å–æ—Ä—ã –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ',
        sponsors: ['https://t.me/sponsor1', 'https://t.me/sponsor2'],
        required: ['@channel1', '@channel2'],
        expectedStage: 'sponsors'
    },
    {
        name: '–¢–æ–ª—å–∫–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã',
        sponsors: [],
        required: ['@channel1', '@channel2'],
        expectedStage: 'required'
    },
    {
        name: '–ù–µ—Ç –∫–∞–Ω–∞–ª–æ–≤ –≤–æ–æ–±—â–µ',
        sponsors: [],
        required: [],
        expectedStage: 'completed'
    }
];

testScenarios.forEach((scenario, index) => {
    console.log(`\n${index + 1}. ${scenario.name}:`);
    console.log(`   –°–ø–æ–Ω—Å–æ—Ä–æ–≤: ${scenario.sponsors.length}`);
    console.log(`   –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö: ${scenario.required.length}`);
    console.log(`   –û–∂–∏–¥–∞–µ–º—ã–π —ç—Ç–∞–ø: ${scenario.expectedStage}`);
});

console.log('\n‚úÖ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
console.log('\nüìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
console.log('1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —Å–ø–æ–Ω—Å–æ—Ä—Å–∫–∏–µ –∫–∞–Ω–∞–ª—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –ü–ï–†–í–´–ú–ò');
console.log('2. –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –¢–û–õ–¨–ö–û –ø–æ—Å–ª–µ —Å–ø–æ–Ω—Å–æ—Ä–æ–≤');
console.log('3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
console.log('4. –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –í–°–ï–• —ç—Ç–∞–ø–æ–≤');
