/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
 * –≠–º—É–ª–∏—Ä—É–µ—Ç –ø–æ–≤–µ–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏–∫—É
 */

const smartSubGram = require('./subgram-smart-handler');
const db = require('./database');

async function runTestScenario() {
    console.log('üé¨ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è...\n');

    try {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        await db.initializeDatabase();
        console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞\n');

        const testUserId = 7972065986; // ID –∞–¥–º–∏–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∞

        console.log('üìã –¢–ï–°–¢–û–í–´–ô –°–¶–ï–ù–ê–†–ò–ô: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ö–æ–¥–∏—Ç –≤ –±–æ—Ç–∞\n');

        // === –°–¶–ï–ù–ê–†–ò–ô 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è ===
        console.log('1Ô∏è‚É£ –≠–¢–ê–ü: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ SubGram');
        console.log('='.repeat(50));

        const state = await smartSubGram.getSubGramState(testUserId);
        console.log(`‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ SubGram: ${state.state}`);
        console.log(`üîí –î–æ–ª–∂–µ–Ω –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å: ${state.shouldBlock}`);
        console.log(`üì∫ –ö–∞–Ω–∞–ª–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: ${state.channels.length}`);

        // === –°–¶–ï–ù–ê–†–ò–ô 2: –†–µ—à–µ–Ω–∏–µ –æ –¥–æ—Å—Ç—É–ø–µ ===
        console.log('\n2Ô∏è‚É£ –≠–¢–ê–ü: –ü—Ä–∏–Ω–∏–º–∞–µ–º —Ä–µ—à–µ–Ω–∏–µ –æ –¥–æ—Å—Ç—É–ø–µ –∫ –±–æ—Ç—É');
        console.log('='.repeat(50));

        const accessDecision = await smartSubGram.shouldBlockBotAccess(testUserId);
        console.log(`üéØ –†–µ—à–µ–Ω–∏–µ: ${accessDecision.shouldBlock ? '–ë–õ–û–ö–ò–†–û–í–ê–¢–¨' : '–†–ê–ó–†–ï–®–ò–¢–¨'}`);
        console.log(`üìù –ü—Ä–∏—á–∏–Ω–∞: ${accessDecision.reason}`);

        // === –°–¶–ï–ù–ê–†–ò–ô 3: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===
        console.log('\n3Ô∏è‚É£ –≠–¢–ê–ü: –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é');
        console.log('='.repeat(50));

        const userMessage = await smartSubGram.getSubscriptionMessage(testUserId);
        console.log(`üë§ –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µÔøΩÔøΩ–µ–Ω: ${userMessage.accessAllowed}`);

        if (!userMessage.accessAllowed) {
            console.log(`üì∫ –ö–∞–Ω–∞–ª–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏: ${userMessage.channelsCount}`);
            console.log('üí¨ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–∏–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ –Ω–∞ –∫–∞–Ω–∞–ª—ã');
        } else {
            console.log('üè† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–∏–¥–∏—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞');
        }

        // === –°–¶–ï–ù–ê–†–ò–ô 4: –õ–æ–≥–∏–∫–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è –±–æ—Ç–∞ ===
        console.log('\n4Ô∏è‚É£ –≠–¢–ê–ü: –ö–∞–∫ –ø–æ–≤–µ–¥–µ—Ç —Å–µ–±—è –±–æ—Ç');
        console.log('='.repeat(50));

        if (accessDecision.shouldBlock) {
            console.log('üö´ –ë–õ–û–ö–ò–†–û–í–ö–ê –ê–ö–¢–ò–í–ù–ê:');
            console.log('   ‚Ä¢ –ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–∫–∞–∂–µ—Ç –¢–û–õ–¨–ö–û —Å–ø–æ–Ω—Å–æ—Ä—Å–∫–∏–µ –∫–∞–Ω–∞–ª—ã');
            console.log('   ‚Ä¢ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ù–ï –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
            console.log('   ‚Ä¢ –ö–Ω–æ–ø–∫–∏ –±–æ—Ç–∞ –±—É–¥—É—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã');
            console.log('   ‚Ä¢ –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –±—É–¥—É—Ç –ø–æ–∫–∞–∑–∞–Ω—ã –∫–∞–Ω–∞–ª—ã');
        } else {
            console.log('‚úÖ –î–û–°–¢–£–ü –†–ê–ó–†–ï–®–ï–ù:');
            console.log('   ‚Ä¢ –ö–æ–º–∞–Ω–¥–∞ /start –ø–æ–∫–∞–∂–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é');
            console.log('   ‚Ä¢ –í—Å–µ –∫–Ω–æ–ø–∫–∏ –±–æ—Ç–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ');
            console.log('   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏');
        }

        // === –°–¶–ï–ù–ê–†–ò–ô 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è ===
        console.log('\n5Ô∏è‚É£ –≠–¢–ê–ü: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã');
        console.log('='.repeat(50));

        const isFixed = checkIfProblemIsFixed(state, accessDecision, userMessage);
        
        if (isFixed.success) {
            console.log('üéâ –ü–†–û–ë–õ–ï–ú–ê –ò–°–ü–†–ê–í–õ–ï–ù–ê!');
            console.log(`‚úÖ ${isFixed.reason}`);
        } else {
            console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê –ï–©–Å –ï–°–¢–¨!');
            console.log(`‚ö†Ô∏è ${isFixed.reason}`);
        }

        // === –†–ï–ó–£–õ–¨–¢–ê–¢ ===
        console.log('\nüìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:');
        console.log('='.repeat(50));

        if (state.channels.length === 0) {
            console.log('üìã –°–∏—Ç—É–∞—Ü–∏—è: –ù–µ—Ç —Å–ø–æ–Ω—Å–æ—Ä—Å–∫–∏—Ö –∫–∞–Ω–∞–ª–æ–≤');
            console.log('üéØ –û–∂–∏–¥–∞–Ω–∏–µ: –î–æ—Å—Ç—É–ø –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω');
            console.log(`üîç –†–µ–∞–ª—å–Ω–æ—Å—Ç—å: ${accessDecision.shouldBlock ? '–ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù ÔøΩÔøΩ' : '–†–ê–ó–†–ï–®–ï–ù ‚úÖ'}`);
        } else {
            console.log('üìã –°–∏—Ç—É–∞—Ü–∏—è: –ï—Å—Ç—å —Å–ø–æ–Ω—Å–æ—Ä—Å–∫–∏–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏');
            console.log('üéØ –û–∂–∏–¥–∞–Ω–∏–µ: –î–æ—Å—Ç—É–ø –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
            console.log(`üîç –†–µ–∞–ª—å–Ω–æ—Å—Ç—å: ${accessDecision.shouldBlock ? '–ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù ‚úÖ' : '–†–ê–ó–†–ï–®–ï–ù ‚ùå'}`);
        }

        console.log('\nüìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
        if (isFixed.success) {
            console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ');
            console.log('üöÄ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ');
        } else {
            console.log('üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç–ª–∞–¥–∫–∞');
            console.log('üß™ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ TESTING_COMMANDS.md');
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏:', error);
        console.error('Stack trace:', error.stack);
    } finally {
        try {
            await db.closeConnection();
            console.log('\nüîí –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–∞');
        } catch (closeError) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –±–∞–∑—ã:', closeError);
        }
    }
}

function checkIfProblemIsFixed(state, accessDecision, userMessage) {
    // –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    
    if (state.channels.length === 0) {
        // –ù–µ—Ç –∫–∞–Ω–∞–ª–æ–≤ - –¥–æ—Å—Ç—É–ø –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω
        if (!accessDecision.shouldBlock && userMessage.accessAllowed) {
            return {
                success: true,
                reason: '–ù–µ—Ç –∫–∞–Ω–∞–ª–æ–≤ ‚Üí –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω ‚Üí –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø–æ–∫–∞–∑–∞–Ω–æ'
            };
        } else {
            return {
                success: false,
                reason: '–ù–µ—Ç –∫–∞–Ω–∞–ª–æ–≤, –Ω–æ –¥–æ—Å—Ç—É–ø –≤—Å—ë —Ä–∞–≤–Ω–æ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è'
            };
        }
    } else {
        // –ï—Å—Ç—å –∫–∞–Ω–∞–ª—ã - –¥–æ—Å—Ç—É–ø –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
        if (accessDecision.shouldBlock && !userMessage.accessAllowed) {
            return {
                success: true,
                reason: '–ï—Å—Ç—å –∫–∞–Ω–∞–ª—ã ‚Üí –¥–æ—Å—Ç—É–ø –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω ‚Üí –ø–æ–∫–∞–∑–∞–Ω—ã –∫–∞–Ω–∞–ª—ã'
            };
        } else {
            return {
                success: false,
                reason: '–ï—Å—Ç—å –∫–∞–Ω–∞–ª—ã, –Ω–æ –¥–æ—Å—Ç—É–ø –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è (—Å—Ç–∞—Ä–∞—è –ø—Ä–æ–±–ª–µ–º–∞)'
            };
        }
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if (require.main === module) {
    runTestScenario().then(() => {
        console.log('\n‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω');
        process.exit(0);
    }).catch(error => {
        console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è:', error);
        process.exit(1);
    });
}

module.exports = { runTestScenario };
