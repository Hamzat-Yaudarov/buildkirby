#!/usr/bin/env node

/**
 * –†–ê–ë–û–¢–ê –° –§–ê–ô–õ–û–ú APPLE NUMBERS (.numbers)
 * 
 * –§–∞–π–ª "–õ–æ–≥–∏ –∏–∑ Railway.numbers" - —ç—Ç–æ —Ñ–æ—Ä–º–∞—Ç Apple Numbers
 * –î–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –Ω–µ –º–æ–∂–µ—Ç –Ω–∞–ø—Ä—è–º—É—é —á–∏—Ç–∞—Ç—å .numbers —Ñ–∞–π–ª—ã, 
 * –Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã
 */

console.log('üçé ===== –†–ê–ë–û–¢–ê –° –§–ê–ô–õ–û–ú APPLE NUMBERS =====\n');

console.log('‚ùå –ü–†–û–ë–õ–ï–ú–ê:');
console.log('   –§–∞–π–ª "–õ–æ–≥–∏ –∏–∑ Railway.numbers" –≤ —Ñ–æ—Ä–º–∞—Ç–µ Apple Numbers');
console.log('   Node.js –Ω–µ –º–æ–∂–µ—Ç –Ω–∞–ø—Ä—è–º—É—é —á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª—ã .numbers\n');

console.log('‚úÖ –†–ï–®–ï–ù–ò–Ø:\n');

console.log('üîÑ –í–ê–†–ò–ê–ù–¢ 1: –≠–ö–°–ü–û–†–¢ –í CSV/TXT');
console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –≤ Apple Numbers');
console.log('   2. –ú–µ–Ω—é ‚Üí –§–∞–π–ª ‚Üí –≠–∫—Å–ø–æ—Ä—Ç ‚Üí CSV –∏–ª–∏ TXT');
console.log('   3. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–∞–∫ "railway_logs.csv"');
console.log('   4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node parse-railway-logs.js railway_logs.csv\n');

console.log('üìã –í–ê–†–ò–ê–ù–¢ 2: –ö–û–ü–ò–†–û–í–ê–ù–ò–ï –î–ê–ù–ù–´–•');
console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –≤ Apple Numbers');
console.log('   2. –í—ã–¥–µ–ª–∏—Ç–µ —Å—Ç–æ–ª–±–µ—Ü —Å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
console.log('   3. –ö–æ–ø–∏—Ä—É–π—Ç–µ (Cmd+C)');
console.log('   4. –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª user_ids.txt –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –¥–∞–Ω–Ω—ã–µ');
console.log('   5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node railway-reminder-script.js user_ids.txt\n');

console.log('üåê –í–ê–†–ò–ê–ù–¢ 3: GOOGLE SHEETS');
console.log('   1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –≤ Google Sheets');
console.log('   2. –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –∫–∞–∫ CSV');
console.log('   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node parse-railway-logs.js exported_file.csv\n');

console.log('‚ö° –í–ê–†–ò–ê–ù–¢ 4: –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–ó–í–õ–ï–ß–ï–ù–ò–ï (–ï–°–õ–ò –ï–°–¢–¨ –¢–ï–ö–°–¢–û–í–´–ï –õ–û–ì–ò)');
console.log('   –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ª–æ–≥–∏ Railway, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:');
console.log('   node parse-railway-logs.js railway_logs.txt\n');

console.log('üìä –ö–ê–ö–ò–ï –î–ê–ù–ù–´–ï –ù–£–ñ–ù–´:');
console.log('   ‚Ä¢ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—á–∏—Å–ª–∞ –æ—Ç 100000 –¥–æ 9999999999)');
console.log('   ‚Ä¢ –ú–æ–∂–Ω–æ –≤ –ª—é–±–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: CSV, TXT, JSON');
console.log('   ‚Ä¢ –ü–∞—Ä—Å–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π–¥–µ—Ç –∏ –∏–∑–≤–ª–µ—á–µ—Ç –≤—Å–µ ID\n');

console.log('üîç –ü–†–ò–ú–ï–† –°–¢–†–£–ö–¢–£–†–´ –î–ê–ù–ù–´–•:');
console.log('   user_id,action,timestamp');
console.log('   123456789,captcha_failed,2024-01-01');
console.log('   987654321,subscription_failed,2024-01-01');
console.log('   555444333,not_subscribed,2024-01-01\n');

console.log('üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
console.log('   1. –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ .numbers —Ñ–∞–π–ª –≤ CSV —Ñ–æ—Ä–º–∞—Ç');
console.log('   2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ parse-railway-logs.js –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è ID');
console.log('   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ railway-reminder-script.js —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º —Ñ–∞–π–ª–æ–º\n');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
function createExampleFile() {
    const fs = require('fs');
    
    const exampleData = `user_id,status,reason
123456789,failed,captcha_not_passed
987654321,failed,subscription_incomplete
555444333,failed,not_subscribed
111222333,failed,captcha_timeout
444555666,failed,sponsor_channels_not_joined`;

    try {
        fs.writeFileSync('example_user_ids.csv', exampleData, 'utf8');
        console.log('üìÅ –°–æ–∑–¥–∞–Ω –ø—Ä–∏–º–µ—Ä —Ñ–∞–π–ª–∞: example_user_ids.csv');
        console.log('   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞–∫ —à–∞–±–ª–æ–Ω –¥–ª—è –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö\n');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞ —Ñ–∞–π–ª–∞:', error.message);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞ —Å ID
function createQuickIdFile() {
    const readline = require('readline');
    const fs = require('fs');
    
    console.log('‚ö° –ë–´–°–¢–†–û–ï –°–û–ó–î–ê–ù–ò–ï –§–ê–ô–õ–ê –° ID');
    console.log('   –í—Å—Ç–∞–≤—å—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É)');
    console.log('   –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É\n');
    
    const rl = readline.createInterface({
        input: process.stdin,
        output: process.stdout
    });
    
    const userIds = [];
    
    function askForId() {
        rl.question('ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∏–ª–∏ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è): ', (answer) => {
            if (!answer.trim()) {
                // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤–≤–æ–¥–∞
                if (userIds.length > 0) {
                    const filename = 'manual_user_ids.txt';
                    fs.writeFileSync(filename, userIds.join('\n'), 'utf8');
                    console.log(`\n‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: ${filename}`);
                    console.log(`üìä –í—Å–µ–≥–æ ID: ${userIds.length}`);
                    console.log(`üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ: node railway-reminder-script.js ${filename}`);
                } else {
                    console.log('‚ùå ID –Ω–µ –±—ã–ª–∏ –≤–≤–µ–¥–µ–Ω—ã');
                }
                rl.close();
                return;
            }
            
            const userId = parseInt(answer.trim());
            if (isNaN(userId) || userId < 100000 || userId > 9999999999) {
                console.log('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID. –î–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ –æ—Ç 100000 –¥–æ 9999999999');
                askForId();
                return;
            }
            
            if (userIds.includes(userId)) {
                console.log('‚ö†Ô∏è ID —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω');
            } else {
                userIds.push(userId);
                console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω ID: ${userId} (–≤—Å–µ–≥–æ: ${userIds.length})`);
            }
            
            askForId();
        });
    }
    
    askForId();
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
    const args = process.argv.slice(2);
    
    if (args.includes('--example')) {
        createExampleFile();
    } else if (args.includes('--manual')) {
        createQuickIdFile();
    } else {
        console.log('üõ†Ô∏è –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ö–û–ú–ê–ù–î–´:');
        console.log('   node extract-from-numbers.js --example  # –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–º–µ—Ä —Ñ–∞–π–ª–∞');
        console.log('   node extract-from-numbers.js --manual   # –†—É—á–Ω–æ–π –≤–≤–æ–¥ ID');
    }
}

if (require.main === module) {
    main();
}
