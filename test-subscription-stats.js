const db = require('./database');

async function testSubscriptionStats() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫...');
    
    try {
        await db.initializeDatabase();
        console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        
        // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü
        console.log('\nüìã –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü...');
        
        const tablesQuery = await db.executeQuery(`
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public' 
            AND table_name IN ('channel_subscription_stats', 'subscription_check_events')
        `);
        
        console.log('–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:', tablesQuery.rows.map(r => r.table_name));
        
        if (tablesQuery.rows.length === 2) {
            console.log('‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');
        } else {
            console.log('‚ùå –ù–µ –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞–π–¥–µ–Ω—ã');
            return;
        }
        
        // –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
        console.log('\nüìã –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞...');
        
        await db.executeQuery(`
            INSERT INTO required_channels (channel_id, channel_name, is_active) 
            VALUES ('@test_channel_1', '–¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª 1', TRUE)
            ON CONFLICT (channel_id) DO NOTHING
        `);
        
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω');
        
        // –¢–µ—Å—Ç 3: –°–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
        console.log('\nüìã –¢–µ—Å—Ç 3: –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏...');
        
        const testUserId = 123456789;
        const result = await db.recordSubscriptionCheck(testUserId, true);
        
        if (result) {
            console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞–ø–∏—Å–∞–Ω–∞');
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏');
            return;
        }
        
        // –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        console.log('\nüìã –¢–µ—Å—Ç 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
        
        const stats = await db.getChannelSubscriptionStats();
        console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–æ–≤:', JSON.stringify(stats, null, 2));
        
        if (stats.length > 0) {
            console.log('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        } else {
            console.log('‚ùå –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
        
        // –¢–µ—Å—Ç 5: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –∫–∞–Ω–∞–ª–∞ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
        console.log('\nüìã –¢–µ—Å—Ç 5: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –∫–∞–Ω–∞–ª–∞...');
        
        await new Promise(resolve => setTimeout(resolve, 1000)); // –ü–∞—É–∑–∞ 1 —Å–µ–∫—É–Ω–¥–∞
        
        await db.executeQuery(`
            INSERT INTO required_channels (channel_id, channel_name, is_active) 
            VALUES ('@test_channel_2', '–¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª 2', TRUE)
            ON CONFLICT (channel_id) DO NOTHING
        `);
        
        console.log('‚úÖ –í—Ç–æ—Ä–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω');
        
        // –¢–µ—Å—Ç 6: –ù–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ (–¥–æ–ª–∂–Ω–∞ —É–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫–∏ –æ–±–æ–∏—Ö –∫–∞–Ω–∞–ª–æ–≤)
        console.log('\nüìã –¢–µ—Å—Ç 6: –ù–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏...');
        
        const result2 = await db.recordSubscriptionCheck(testUserId + 1, true);
        
        if (result2) {
            console.log('‚úÖ –í—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –∑–∞–ø–∏—Å–∞–Ω–∞');
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤—Ç–æ—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏');
            return;
        }
        
        // –¢–µ—Å—Ç 7: –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        console.log('\nüìã –¢–µ—Å—Ç 7: –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞...');
        
        const finalStats = await db.getChannelSubscriptionStats();
        
        console.log('\nüìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
        for (const stat of finalStats) {
            console.log(`Canal: ${stat.channel_name || stat.channel_id}`);
            console.log(`  –£—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: ${stat.successful_checks}`);
            console.log(`  –î–æ–±–∞–≤–ª–µ–Ω: ${stat.channel_added_at}`);
            console.log(`  –ê–∫—Ç–∏–≤–µ–Ω: ${stat.is_active}`);
            console.log('');
        }
        
        // –¢–µ—Å—Ç 8: –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–≤–µ—Ä–æ–∫
        console.log('\nüìã –¢–µ—Å—Ç 8: –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–≤–µ—Ä–æ–∫...');
        
        const history = await db.getSubscriptionCheckHistory(10);
        
        console.log('\nüìã –ò–°–¢–û–†–ò–Ø –ü–†–û–í–ï–†–û–ö:');
        for (const check of history) {
            console.log(`User ID: ${check.user_id}, –í—Ä–µ–º—è: ${check.checked_at}, –£—Å–ø–µ—Ö: ${check.success}, –ö–∞–Ω–∞–ª–æ–≤: ${check.active_channels_count}`);
        }
        
        console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
        console.log('\nüí° –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:');
        console.log('1. –ö–∞–Ω–∞–ª @test_channel_1 –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –ø–µ—Ä–≤—ã–º');
        console.log('2. –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ —É–≤–µ–ª–∏—á–∏–ª–∞ –µ–≥–æ —Å—á–µ—Ç—á–∏–∫ –¥–æ 1');
        console.log('3. –ö–∞–Ω–∞–ª @test_channel_2 –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤—Ç–æ—Ä—ã–º');
        console.log('4. –í—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ —É–≤–µ–ª–∏—á–∏–ª–∞ —Å—á–µ—Ç—á–∏–∫–∏ –û–ë–û–ò–• –∫–∞–Ω–∞–ª–æ–≤');
        console.log('5. –í –∏—Ç–æ–≥–µ: –∫–∞–Ω–∞–ª 1 –∏–º–µ–µ—Ç 2 –ø—Ä–æ–≤–µ—Ä–∫–∏, –∫–∞–Ω–∞–ª 2 –∏–º–µ–µ—Ç 1 –ø—Ä–æ–≤–µ—Ä–∫—É');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    }
    
    await db.closeConnection();
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testSubscriptionStats();
