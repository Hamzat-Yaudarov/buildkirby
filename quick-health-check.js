#!/usr/bin/env node
/**
 * –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –≤—ã–≤–æ–¥–∞
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤—ã–∑—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏
 */

const db = require('./database');
const TelegramBot = require('node-telegram-bot-api');

// Configuration
let token = process.env.BOT_TOKEN;
if (!token) {
    token = '8379368723:AAEnG133OZ4qMrb5vQfM7VdEFSuLiWydsyM';
}

const ADMIN_CHANNEL = process.env.ADMIN_CHANNEL || '@kirbyvivodstars';
const bot = new TelegramBot(token, { polling: false });

async function quickHealthCheck() {
    console.log('üîç –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã...\n');
    
    const results = {
        database: '‚ùå',
        adminChannel: '‚ùå',
        botToken: '‚ùå',
        permissions: '‚ùå'
    };
    
    // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞...');
    try {
        const botInfo = await bot.getMe();
        console.log(`‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç: @${botInfo.username} (${botInfo.id})`);
        results.botToken = '‚úÖ';
    } catch (error) {
        console.error(`‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–æ–∫–µ–Ω–æ–º –±–æ—Ç–∞: ${error.message}`);
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    try {
        await db.initializeDatabase();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É withdrawal_requests
        const result = await db.executeQuery('SELECT COUNT(*) as count FROM withdrawal_requests LIMIT 1');
        console.log(`‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞. –ó–∞—è–≤–æ–∫ –≤ —Å–∏—Å—Ç–µ–º–µ: ${result.rows[0].count}`);
        results.database = '‚úÖ';
    } catch (error) {
        console.error(`‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: ${error.message}`);
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –∫–∞–Ω–∞–ª–∞...');
    try {
        const chatInfo = await bot.getChat(ADMIN_CHANNEL);
        console.log(`‚úÖ –ö–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω: ${chatInfo.title || chatInfo.username || ADMIN_CHANNEL}`);
        results.adminChannel = '‚úÖ';
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞
        const botInfo = await bot.getMe();
        const memberInfo = await bot.getChatMember(ADMIN_CHANNEL, botInfo.id);
        
        if (memberInfo.status === 'administrator' || memberInfo.status === 'member') {
            console.log(`‚úÖ –ë–æ—Ç –≤ –∫–∞–Ω–∞–ª–µ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º: ${memberInfo.status}`);
            results.permissions = '‚úÖ';
        } else {
            console.warn(`‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞: ${memberInfo.status}`);
        }
        
    } catch (error) {
        console.error(`‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞–¥–º–∏–Ω—Å–∫–∏–º –∫–∞–Ω–∞–ª–æ–º: ${error.message}`);
        
        if (error.message.includes('chat not found')) {
            console.log(`üí° –ö–∞–Ω–∞–ª ${ADMIN_CHANNEL} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –±–æ—Ç –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω`);
        } else if (error.message.includes('Forbidden')) {
            console.log(`üí° –ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ ${ADMIN_CHANNEL}`);
        }
    }
    
    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–∞–≤–Ω–∏—Ö –∑–∞—è–≤–æ–∫
    console.log('\n4Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –Ω–µ–¥–∞–≤–Ω–∏—Ö –∑–∞—è–≤–æÔøΩÔøΩ...');
    try {
        const recentRequests = await db.executeQuery(`
            SELECT status, COUNT(*) as count 
            FROM withdrawal_requests 
            WHERE created_at > NOW() - INTERVAL '24 hours'
            GROUP BY status
        `);
        
        if (recentRequests.rows.length === 0) {
            console.log('‚ÑπÔ∏è –ó–∞—è–≤–æ–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞ –Ω–µ—Ç');
        } else {
            console.log('üìä –ó–∞—è–≤–∫–∏ –∑–∞ 24 —á–∞—Å–∞:');
            recentRequests.rows.forEach(row => {
                const emoji = row.status === 'pending' ? '‚è≥' : 
                             row.status === 'completed' ? '‚úÖ' : 
                             row.status === 'rejected' ? '‚ùå' : '‚ùì';
                console.log(`   ${emoji} ${row.status}: ${row.count}`);
            });
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—è–≤–∫–∏ –∫–æ—Ç–æ—Ä—ã–µ –≤–∏—Å—è—Ç —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ
        const stuckRequests = await db.executeQuery(`
            SELECT COUNT(*) as count 
            FROM withdrawal_requests 
            WHERE status = 'pending' 
            AND created_at < NOW() - INTERVAL '2 hours'
        `);
        
        if (parseInt(stuckRequests.rows[0].count) > 0) {
            console.warn(`‚ö†Ô∏è –ù–∞–π–¥–µ–Ω–æ ${stuckRequests.rows[0].count} –∑–∞—è–≤–æ–∫ —Å—Ç–∞—Ä—à–µ 2 —á–∞—Å–æ–≤ –≤ —Å—Ç–∞—Ç—É—Å–µ pending`);
        }
        
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –∑–∞—è–≤–æ–∫: ${error.message}`);
    }
    
    // 5. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç
    console.log('\nüìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–Å–¢:');
    console.log('==================');
    console.log(`ü§ñ –¢–æ–∫–µ–Ω –±–æ—Ç–∞:      ${results.botToken}`);
    console.log(`üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:     ${results.database}`);
    console.log(`üì° –ê–¥–º–∏–Ω—Å–∫–∏–π –∫–∞–Ω–∞–ª:  ${results.adminChannel}`);
    console.log(`üîë –ü—Ä–∞–≤–∞ –±–æ—Ç–∞:       ${results.permissions}`);
    
    const allGood = Object.values(results).every(status => status === '‚úÖ');
    
    if (allGood) {
        console.log('\nüéâ –í–°–ï –°–ò–°–¢–ï–ú–´ –†–ê–ë–û–¢–ê–Æ–¢ –ù–û–†–ú–ê–õ–¨–ù–û!');
        console.log('–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤—Å—ë –µ—â—ë –ø–æ–ª—É—á–∞—é—Ç –æ—à–∏–±–∫–∏, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:');
        console.log('‚Ä¢ –õ–æ–≥–∏ –±–æ—Ç–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏');
        console.log('‚Ä¢ –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö');
        console.log('‚Ä¢ –¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã /withdrawal_diagnostics');
    } else {
        console.log('\n‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´!');
        console.log('–ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –≤—ã—à–µ –¥–ª—è –Ω–æ—Ä–ºÔøΩÔøΩ–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –≤—ã–≤–æ–¥–∞.');
    }
    
    console.log('\nüîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:');
    console.log('‚Ä¢ node test-admin-channel.js - –¥–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∫–∞–Ω–∞–ª–∞');
    console.log('‚Ä¢ /withdrawal_diagnostics - –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤ –±–æ—Ç–µ');
    console.log('‚Ä¢ /test_admin_channel - —Ç–µ—Å—Ç –∫–∞–Ω–∞–ª–∞ –≤ –±–æ—Ç–µ');
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏
if (require.main === module) {
    quickHealthCheck()
        .then(() => {
            process.exit(0);
        })
        .catch((error) => {
            console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
            process.exit(1);
        });
}

module.exports = { quickHealthCheck };
