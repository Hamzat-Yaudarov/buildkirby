/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–ø–æ–Ω—Å–æ—Ä—Å–∫–∏—Ö –∫–∞–Ω–∞–ª–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 */

const db = require('./database');

async function checkSubGramDatabase() {
    console.log('üîç –ü–†–û–í–ï–†–ö–ê –°–¢–ê–†–´–• –ö–ê–ù–ê–õ–û–í –í –ë–ê–ó–ï –î–ê–ù–ù–´–•\n');

    try {
        await db.initializeDatabase();

        // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
        console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤...');
        const allChannels = await db.executeQuery(`
            SELECT user_id, channel_name, channel_link, created_at, 
                   DATE_PART('hour', NOW() - created_at) as hours_ago
            FROM subgram_channels 
            ORDER BY created_at DESC
        `);

        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${allChannels.rows.length} –∫–∞–Ω–∞–ª–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:`);
        
        if (allChannels.rows.length > 0) {
            console.log('\nüìù –í—Å–µ –∫–∞–Ω–∞–ª—ã:');
            allChannels.rows.forEach((ch, i) => {
                console.log(`${i+1}. User ${ch.user_id}: ${ch.channel_name}`);
                console.log(`   –°—Å—ã–ª–∫–∞: ${ch.channel_link}`);
                console.log(`   –°–æ–∑–¥–∞–Ω: ${ch.created_at} (${Math.round(ch.hours_ago)} —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥)`);
                console.log('');
            });
        }

        // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º "—Å–≤–µ–∂–∏–µ" –∫–∞–Ω–∞–ª—ã (–¥–æ 2 —á–∞—Å–æ–≤)
        console.log('2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ "—Å–≤–µ–∂–∏—Ö" –∫–∞–Ω–∞–ª–æ–≤ (–¥–æ 2 —á–∞—Å–æ–≤)...');
        const freshChannels = await db.executeQuery(`
            SELECT user_id, channel_name, channel_link, created_at
            FROM subgram_channels 
            WHERE created_at > NOW() - INTERVAL '2 hours'
            ORDER BY created_at DESC
        `);

        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${freshChannels.rows.length} —Å–≤–µ–∂–∏—Ö –∫–∞–Ω–∞–ª–æ–≤:`);
        freshChannels.rows.forEach((ch, i) => {
            console.log(`${i+1}. User ${ch.user_id}: ${ch.channel_name} (${ch.channel_link})`);
        });

        // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–Ω–∞–ª—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const testUserId = 7961237966;
        console.log(`\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${testUserId}...`);
        const userChannels = await db.executeQuery(`
            SELECT channel_name, channel_link, created_at,
                   DATE_PART('hour', NOW() - created_at) as hours_ago
            FROM subgram_channels 
            WHERE user_id = $1
            ORDER BY created_at DESC
        `, [testUserId]);

        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${userChannels.rows.length} –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`);
        userChannels.rows.forEach((ch, i) => {
            console.log(`${i+1}. ${ch.channel_name}`);
            console.log(`   –°—Å—ã–ª–∫–∞: ${ch.channel_link}`);
            console.log(`   –í–æ–∑—Ä–∞—Å—Ç: ${Math.round(ch.hours_ago)} —á–∞—Å–æ–≤`);
        });

        // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞–Ω–∞–ª–æ–≤
        console.log(`\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞–Ω–∞–ª–æ–≤...`);
        
        // –°–∏–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∏–∑ subscription-flow-manager.js
        const savedChannels = await db.executeQuery(`
            SELECT * FROM subgram_channels
            WHERE user_id = $1
            AND created_at > NOW() - INTERVAL '2 hours'
            ORDER BY created_at DESC
        `, [testUserId]);

        console.log(`üß™ –õ–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: –Ω–∞–π–¥–µ–Ω–æ ${savedChannels.rows.length} –∫–∞–Ω–∞–ª–æ–≤ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—é "–¥–æ 2 —á–∞—Å–æ–≤"`);

        // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–∞–Ω–∞–ª—ã (—Å—Ç–∞—Ä—à–µ 2 —á–∞—Å–æ–≤)
        const oldChannels = await db.executeQuery(`
            SELECT channel_name, channel_link, created_at,
                   DATE_PART('hour', NOW() - created_at) as hours_ago
            FROM subgram_channels 
            WHERE user_id = $1
            AND created_at <= NOW() - INTERVAL '2 hours'
            ORDER BY created_at DESC
        `, [testUserId]);

        console.log(`üì∞ –°—Ç–∞—Ä—ã–µ –∫–∞–Ω–∞–ª—ã (>2—á): –Ω–∞–π–¥–µ–Ω–æ ${oldChannels.rows.length}`);
        if (oldChannels.rows.length > 0) {
            console.log('‚ö†Ô∏è –ü–†–û–ë–õ–ï–ú–ê: –ï—Å—Ç—å —Å—Ç–∞—Ä—ã–µ –∫–∞–Ω–∞–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è!');
            oldChannels.rows.forEach((ch, i) => {
                console.log(`${i+1}. ${ch.channel_name} (${Math.round(ch.hours_ago)}—á –Ω–∞–∑–∞–¥)`);
            });
        }

        // 6. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º—ã
        console.log('\n6Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –ü–†–û–ë–õ–ï–ú–´:');
        console.log('==========================================');
        
        if (userChannels.rows.length > 0) {
            console.log('üö® **–ù–ê–ô–î–ï–ù–ê –ü–†–ò–ß–ò–ù–ê –ü–†–û–ë–õ–ï–ú–´:**');
            console.log(`‚Ä¢ –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –µ—Å—Ç—å ${userChannels.rows.length} —Å—Ç–∞—Ä—ã—Ö –∫–∞–Ω–∞–ª–æ–≤`);
            console.log('‚Ä¢ –≠—Ç–∏ –∫–∞–Ω–∞–ª—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é');
            console.log('‚Ä¢ –õ–æ–≥–∏–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
            
            console.log('\nüîß **–†–ï–®–ï–ù–ò–ï:**');
            console.log('1. –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –∫–∞–Ω–∞–ª—ã');
            console.log('2. –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ 0 –∫–∞–Ω–∞–ª–æ–≤');
            console.log('3. –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –æ—á–∏—Å—Ç–∫—É –∫—ç—à–∞');
        } else {
            console.log('‚úÖ **–ö–ê–ù–ê–õ–û–í –í –ë–î –ù–ï–¢**');
            console.log('–ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ - –ø—Ä–æ–≤–µ—Ä–∏–º –ª–æ–≥–∏–∫—É –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
        }

        // 7. –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏
        console.log('\n7Ô∏è‚É£ –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï –î–ï–ô–°–¢–í–ò–ô:');
        console.log('==========================================');
        console.log('–•–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –∫–∞–Ω–∞–ª—ã? –í—ã–ø–æ–ª–Ω–∏—Ç–µ:');
        console.log('```sql');
        console.log('DELETE FROM subgram_channels;');
        console.log('```');
        console.log('');
        console.log('–ò–ª–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
        console.log('```sql');
        console.log(`DELETE FROM subgram_channels WHERE user_id = ${testUserId};`);
        console.log('```');

    } catch (error) {
        console.error('\n‚ùå –û–®–ò–ë–ö–ê:', error.message);
        console.error(error.stack);
    } finally {
        await db.closeConnection();
        console.log('\nüîí –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
    }
}

if (require.main === module) {
    checkSubGramDatabase();
}

module.exports = { checkSubGramDatabase };
