#!/usr/bin/env node
/**
 * –ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–∏–º–≤–æ–ª–æ–≤ –∑–∞–º–µ—â–µ–Ω–∏—è
 */

const fs = require('fs');

function cleanFile(filePath) {
    console.log(`–û—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–∞: ${filePath}`);
    
    try {
        let content = fs.readFileSync(filePath, 'utf8');
        let originalLength = content.length;
        
        // –ü–æ–¥—Å—á–∏—Ç–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
        const badCharsRegex = /\uFFFD/g; // Unicode replacement character
        const matches = content.match(badCharsRegex);
        const badCharsCount = matches ? matches.length : 0;
        
        // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∑–∞–º–µ—â–µ–Ω–∏—è
        content = content.replace(/\uFFFD+/g, '');
        
        // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
        const fixes = [
            ['–ü—Ä–∏–≥–ª\uFFFD\uFFFD—Å–∏—Ç—å', '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å'],
            ['—Ä–æ–∑—ã–≥\uFFFD\uFFFD—ã—à–∞—Ö', '—Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö'],
            ['–Ω\uFFFD\uFFFD—Ç', '–Ω–µ—Ç'],
            ['—Å–æ—Ö—Ä–∞\uFFFD\uFFFD–µ–Ω—ã', '—Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã'],
            ['–õ\uFFFD\uFFFD—Ç–µ—Ä–µ—è', '–õ–æ—Ç–µ—Ä–µ—è'],
            ['—Ä–∞—Å–ø—Ä–µ–¥–µ\uFFFD\uFFFD–µ–Ω—ã', '—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã'],
            ['\uFFFD\uFFFD–∞–π–¥–µ–Ω', '–Ω–∞–π–¥–µ–Ω'],
            ['\uFFFD\uFFFD–∞–Ω–∞–ª', '–ö–∞–Ω–∞–ª'],
            ['—Å–æ–∑–¥–∞\uFFFD\uFFFD–∞', '—Å–æ–∑–¥–∞–Ω–∞'],
            ['—á–∞—Å–æ\uFFFD\uFFFD', '—á–∞—Å–æ–≤'],
            ['–ø—Ä–∏–≥–ª\uFFFD\uFFFD—Å–∏—Ç—å', '–ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å'],
            ['–ø–æ\uFFFD\uFFFD—å–∑–æ–≤–∞—Ç–µ–ª—è–º', '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º'],
            ['–¥\uFFFD\uFFFD—É–∑–µ–π', '–¥—Ä—É–∑–µ–π'],
            ['–±–∏–ª–µ\uFFFD\uFFFD', '–±–∏–ª–µ—Ç'],
            ['–ü–æ–±–µ\uFFFD\uFFFD–∏—Ç–µ–ª–∏', '–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏'],
            ['–ò—Å–ø–æ–ª—å–∑–æ\uFFFD\uFFFD–∞–Ω–∏–π', '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π'],
            ['–ø—Ä–∏–≥–ª–∞—à–∞\uFFFD\uFFFD', '–ø—Ä–∏–≥–ª–∞—à–∞—Ç—å'],
            ['\uFFFD\uFFFD–∞–ø—É—Å–∫–∞—é', '–ó–∞–ø—É—Å–∫–∞—é'],
            ['—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞\uFFFD\uFFFD—å–Ω–æ—Å—Ç—å', '—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å'],
            ['–æ–±—Ä–∞\uFFFD\uFFFD–æ—Ç–∫–∞', '–æ–±—Ä–∞–±–æ—Ç–∫–∞'],
            ['\uFFFD\uFFFD—Ä–æ–∏–∑–æ—à–ª–∞', '–ü—Ä–æ–∏–∑–æ—à–ª–∞'],
            ['–ù\uFFFD\uFFFD–≥—Ä–∞–¥–∞', '–ù–∞–≥—Ä–∞–¥–∞'],
            ['–ø–µ—Ä—Å–æ–Ω–∞–ª—å\uFFFD\uFFFD—ã–π', '–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π'],
            ['\uFFFD\uFFFD—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ', '–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ'],
            ['—Ñ–æ—Ä–º–∏—Ä–æ–≤\uFFFD\uFFFD–Ω–∏—è', '—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è'],
            ['–ü–æ–¥–ø–∏—Å–∫\uFFFD\uFFFD', '–ü–æ–¥–ø–∏—Å–∫–∞'],
            ['—Ä–µ–π—Ç–∏–Ω\uFFFD\uFFFD–∞', '—Ä–µ–π—Ç–∏–Ω–≥–∞'],
            ['–ü\uFFFD\uFFFD–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'],
            ['–û\uFFFD\uFFFD—â–∏–π', '–û–±—â–∏–π'],
            ['–£–∫\uFFFD\uFFFD–∂–∏—Ç–µ', '–£–∫–∞–∂–∏—Ç–µ'],
            ['—Ä–∞—Å—Å\uFFFD\uFFFD–ª–∫—É', '—Ä–∞—Å—Å—ã–ª–∫—É'],
            ['–±—É\uFFFD\uFFFD–µ—Ç', '–±—É–¥–µ—Ç'],
            ['—Å–æ–æ–±—â\uFFFD\uFFFD–Ω–∏–µ', '—Å–æ–æ–±—â–µ–Ω–∏–µ'],
            ['–ù\uFFFD\uFFFD–≥—Ä–∞–¥—ã', '–ù–∞–≥—Ä–∞–¥—ã'],
            ['–ø–æ\uFFFD\uFFFD—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'],
            ['–æ—Ç–∫–ª—é—á–µ\uFFFD\uFFFD–∞', '–æ—Ç–∫–ª—é—á–µ–Ω–∞'],
            ['–æ–±—Ä\uFFFD\uFFFD–±–æ—Ç–∫–∞', '–æ–±—Ä–∞–±–æ—Ç–∫–∞'],
            ['–∑–∞—è–≤\uFFFD\uFFFD–æ–∫', '–∑–∞—è–≤–æ–∫'],
            ['–∞\uFFFD\uFFFD—Ç–æ–º–∞—Ç', '–∞–≤—Ç–æ–º–∞—Ç'],
            ['–†\uFFFD\uFFFD–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ', '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ'],
            ['–±–µ–∑–æ–ø\uFFFD\uFFFD—Å–Ω—ã–µ', '–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ'],
            ['–ø—Ä\uFFFD\uFFFD—Ü–µ—Å—Å–µ', '–ø—Ä–æ—Ü–µ—Å—Å–µ'],
            ['–û—Ç–ø—Ä\uFFFD\uFFFD–≤–ª–µ–Ω–æ', '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ']
        ];
        
        for (const [broken, fixed] of fixes) {
            content = content.replace(new RegExp(broken, 'g'), fixed);
        }
        
        // –¢–∞–∫–∂–µ –∑–∞–º–µ–Ω–∏–º —ç–º–æ–¥–∑–∏ –∫–æ–¥—ã
        content = content.replace(/\uFFFD\uFFFD\uFFFD/g, 'üéâ');
        content = content.replace(/\uFFFD\uFFFD\uFFFD Telegram/g, 'üî• Telegram');
        content = content.replace(/\uFFFD\uFFFD\uFFFD \*\*–°–æ–≤–µ—Ç—ã:\*\*/g, 'üí° **–°–æ–≤–µ—Ç—ã:**');
        
        fs.writeFileSync(filePath, content, 'utf8');
        
        console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${badCharsCount} –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤`);
        console.log(`‚úÖ –†–∞–∑–º–µ—Ä –∏–∑–º–µ–Ω–∏–ª—Å—è —Å ${originalLength} –¥–æ ${content.length} —Å–∏–º–≤–æ–ª–æ–≤`);
        
    } catch (error) {
        console.error(`‚ùå –ûÔøΩÔøΩ–∏–±–∫–∞: ${error.message}`);
    }
}

// –û—á–∏—â–∞–µ–º index.js
cleanFile('index.js');

console.log('\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
