#!/usr/bin/env node
/**
 * –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–æ–º
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É
 */

const readline = require('readline');
const fs = require('fs');
const { execSync } = require('child_process');
const starsAgent = require('./agent-integration');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

class AgentControlPanel {
    constructor() {
        this.currentSettings = {};
    }

    async loadCurrentSettings() {
        console.log('üìä –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫...\n');
        
        try {
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∞–≥–µ–Ω—Ç–∞
            const stats = await starsAgent.getAgentStats();
            if (stats.success) {
                this.currentSettings = stats.stats.security_config || {};
            }

            // –î–æ–ø–æ–ª–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –∫–æ–¥–∞
            this.currentSettings = {
                max_stars_per_day: 80,
                max_stars_per_hour: 10,
                test_max_amount: 25,
                work_hours_start: 0,
                work_hours_end: 23,
                min_delay: 60,
                max_delay: 180,
                test_mode: true,
                ...this.currentSettings
            };

            console.log('‚úÖ –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:');
            this.displaySettings();
            
        } catch (error) {
            console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error.message);
            console.log('üîß –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é\n');
        }
    }

    displaySettings() {
        console.log('‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄÔøΩÔøΩÔøΩ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê');
        console.log('‚îÇ            –¢–ï–ö–£–©–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò            ‚îÇ');
        console.log('‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§');
        console.log(`‚îÇ üìÖ –õ–∏–º–∏—Ç –≤ –¥–µ–Ω—å:      ${this.currentSettings.max_stars_per_day} –∑–≤—ë–∑–¥        ‚îÇ`);
        console.log(`‚îÇ ‚è∞ –õ–∏–º–∏—Ç –≤ —á–∞—Å:       ${this.currentSettings.max_stars_per_hour} –∑–≤—ë–∑–¥         ‚îÇ`);
        console.log(`‚îÇ ‚≠ê –ú–∞–∫—Å –∑–∞ —Ä–∞–∑:       ${this.currentSettings.test_max_amount} –∑–≤—ë–∑–¥        ‚îÇ`);
        console.log(`‚îÇ üåÖ –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã:     ${String(this.currentSettings.work_hours_start).padStart(2, '0')}:00 –ú–°–ö      ‚îÇ`);
        console.log(`‚îÇ üåô –ö–æ–Ω–µ—Ü —Ä–∞–±–æ—Ç—ã:      ${String(this.currentSettings.work_hours_end).padStart(2, '0')}:00 –ú–°–ö      ‚îÇ`);
        console.log(`‚îÇ ‚è±Ô∏è  –ú–∏–Ω –∑–∞–¥–µ—Ä–∂–∫–∞:      ${this.currentSettings.min_delay} —Å–µ–∫         ‚îÇ`);
        console.log(`‚îÇ ‚è±Ô∏è  –ú–∞–∫—Å –∑–∞–¥–µ—Ä–∂–∫–∞:     ${this.currentSettings.max_delay} —Å–µ–∫        ‚îÇ`);
        console.log(`‚îÇ üß™ –¢–µ—Å—Ç —Ä–µ–∂–∏–º:        ${this.currentSettings.test_mode ? '–í–ö–õ' : '–í–´–ö–õ'}         ‚îÇ`);
        console.log('‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n');
    }

    async showMainMenu() {
        console.log('üéõÔ∏è –ü–ê–ù–ï–õ–¨ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ê–ì–ï–ù–¢–û–ú\n');
        console.log('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:');
        console.log('1. üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–≥–µ–Ω—Ç–∞');
        console.log('2. ‚öôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ª–∏–º–∏—Ç—ã');
        console.log('3. üïê –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞–±–æ—á–∏–µ —á–∞—Å—ã');
        console.log('4. ‚è±Ô∏è –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫–∏');
        console.log('5. üß™ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ—Å—Ç-—Ä–µ–∂–∏–º');
        console.log('6. üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≥–µ–Ω—Ç–∞');
        console.log('7. üìù –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –∞–≥–µ–Ω—Ç–∞');
        console.log('8. üß™ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏');
        console.log('9. üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
        console.log('0. üö™ –í—ã—Ö–æ–¥\n');

        return new Promise(resolve => {
            rl.question('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è: ', resolve);
        });
    }

    async showAgentStats() {
        console.log('\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ê–ì–ï–ù–¢–ê:\n');
        
        const stats = await starsAgent.getAgentStats();
        if (stats.success) {
            const s = stats.stats;
            console.log(`üìã –í –æ—á–µ—Ä–µ–¥–∏: ${s.queue_pending} –∑–∞—è–≤–æ–∫`);
            console.log(`‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: ${s.queue_completed} –∑–∞—è–≤–æ–∫`);
            console.log(`‚ùå –û—à–∏–±–æ–∫: ${s.queue_failed} –∑–∞—è–≤–æ–∫`);
            console.log(`‚≠ê –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–µ–≥–æ–¥–Ω—è: ${s.stars_sent_today}/${this.currentSettings.max_stars_per_day} –∑–≤—ë–∑–¥`);
            console.log(`üîß –û—à–∏–±–æ–∫ —Å–µ–≥–æ–¥–Ω—è: ${s.errors_today}`);
        } else {
            console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É');
        }

        const health = await starsAgent.checkAgentHealth();
        console.log(`ü§ñ –°—Ç–∞—Ç—É—Å –∞–≥–µ–Ω—Ç–∞: ${health.health_status}`);
        console.log(`üîÑ –ó–∞–ø—É—â–µ–Ω: ${health.agent_running ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);
        
        console.log('\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...');
        return new Promise(resolve => rl.question('', resolve));
    }

    async changeLimits() {
        console.log('\n‚öôÔ∏è –ò–ó–ú–ï–ù–ï–ù–ò–ï –õ–ò–ú–ò–¢–û–í:\n');
        
        const newDayLimit = await this.askNumber(
            `–õ–∏–º–∏—Ç –∑–≤—ë–∑–¥ –≤ –¥–µ–Ω—å (—Ç–µ–∫—É—â–∏–π: ${this.currentSettings.max_stars_per_day}): `,
            this.currentSettings.max_stars_per_day,
            1, 100
        );

        const newHourLimit = await this.askNumber(
            `–õ–∏–º–∏—Ç –∑–≤—ë–∑–¥ –≤ —á–∞—Å (—Ç–µ–∫—É—â–∏–π: ${this.currentSettings.max_stars_per_hour}): `,
            this.currentSettings.max_stars_per_hour,
            1, 20
        );

        const newMaxAmount = await this.askNumber(
            `–ú–∞–∫—Å–∏–º—É–º –∑–≤—ë–∑–¥ –∑–∞ —Ä–∞–∑ (—Ç–µ–∫—É—â–∏–π: ${this.currentSettings.test_max_amount}): `,
            this.currentSettings.test_max_amount,
            1, 500
        );

        this.currentSettings.max_stars_per_day = newDayLimit;
        this.currentSettings.max_stars_per_hour = newHourLimit;
        this.currentSettings.test_max_amount = newMaxAmount;

        console.log('\n‚úÖ –õ–∏–º–∏—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
        this.displaySettings();
    }

    async changeWorkingHours() {
        console.log('\nüïê –ò–ó–ú–ï–ù–ï–ù–ò–ï –†–ê–ë–û–ß–ò–• –ß–ê–°–û–í:\n');
        
        const startHour = await this.askNumber(
            `–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã, —á–∞—Å (—Ç–µ–∫—É—â–∏–π: ${this.currentSettings.work_hours_start}): `,
            this.currentSettings.work_hours_start,
            0, 23
        );

        const endHour = await this.askNumber(
            `–ö–æ–Ω–µ—Ü —Ä–∞–±–æ—Ç—ã, —á–∞—Å (—Ç–µ–∫—É—â–∏–π: ${this.currentSettings.work_hours_end}): `,
            this.currentSettings.work_hours_end,
            startHour, 23
        );

        this.currentSettings.work_hours_start = startHour;
        this.currentSettings.work_hours_end = endHour;

        console.log('\n‚úÖ –†–∞–±–æ—á–∏–µ —á–∞—Å—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
        this.displaySettings();
    }

    async changeDelays() {
        console.log('\n‚è±Ô∏è –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–ê–î–ï–†–ñ–ï–ö:\n');
        
        const minDelay = await this.askNumber(
            `–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —Å–µ–∫ (—Ç–µ–∫—É—â–∞—è: ${this.currentSettings.min_delay}): `,
            this.currentSettings.min_delay,
            10, 300
        );

        const maxDelay = await this.askNumber(
            `–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —Å–µ–∫ (—Ç–µ–∫—É—â–∞—è: ${this.currentSettings.max_delay}): `,
            this.currentSettings.max_delay,
            minDelay, 600
        );

        this.currentSettings.min_delay = minDelay;
        this.currentSettings.max_delay = maxDelay;

        console.log('\n‚úÖ –ó–∞–¥–µ—Ä–∂–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
        this.displaySettings();
    }

    async toggleTestMode() {
        console.log('\nüß™ –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –¢–ï–°–¢-–†–ï–ñ–ò–ú–ê:\n');
        
        const current = this.currentSettings.test_mode ? '–í–ö–õ–Æ–ß–ï–ù' : '–í–´–ö–õ–Æ–ß–ï–ù';
        console.log(`–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: ${current}`);
        
        const answer = await this.askYesNo('–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ—Å—Ç-—Ä–µ–∂–∏–º? (y/n): ');
        
        if (answer) {
            this.currentSettings.test_mode = !this.currentSettings.test_mode;
            console.log(`\n‚úÖ –¢–µ—Å—Ç-—Ä–µ–∂–∏–º ${this.currentSettings.test_mode ? '–í–ö–õ–Æ–ß–ï–ù' : '–í–´–ö–õ–Æ–ß–ï–ù'}!`);
            
            if (this.currentSettings.test_mode) {
                console.log('‚ö†Ô∏è –í —Ç–µ—Å—Ç-—Ä–µ–∂–∏–º–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π "–ú–∞–∫—Å –∑–∞ —Ä–∞–∑"');
            } else {
                console.log('üöÄ –¢–µ—Å—Ç-—Ä–µ–∂–∏–º –æ—Ç–∫–ª—é—á–µ–Ω - –≤—Å–µ –ª–∏–º–∏—Ç—ã —Å–Ω—è—Ç—ã (–∫—Ä–æ–º–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö)');
            }
        }
    }

    async askNumber(question, defaultValue, min, max) {
        return new Promise(resolve => {
            rl.question(question, (answer) => {
                const num = parseInt(answer.trim());
                if (isNaN(num) || num < min || num > max) {
                    console.log(`‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç ${min} –¥–æ ${max}`);
                    resolve(defaultValue);
                } else {
                    resolve(num || defaultValue);
                }
            });
        });
    }

    async askYesNo(question) {
        return new Promise(resolve => {
            rl.question(question, (answer) => {
                const response = answer.trim().toLowerCase();
                resolve(response === 'y' || response === 'yes' || response === '–¥–∞');
            });
        });
    }

    async saveSettings() {
        console.log('\nüíæ –°–û–•–†–ê–ù–ï–ù–ò–ï –ù–ê–°–¢–†–û–ï–ö...\n');
        
        try {
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å
            
            console.log('üìù –î–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
            console.log('1. –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–¥ —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏');
            console.log('2. git add . && git commit -m "Update agent settings"');
            console.log('3. git push origin main');
            console.log('4. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Railway\n');
            
            console.log('üîß –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /agent_limits –≤ –±–æ—Ç–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–∑–æ–≤—ã—Ö –ª–∏–º–∏—Ç–æ–≤');
            
        } catch (error) {
            console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error.message);
        }
    }

    async testSending() {
        console.log('\nüß™ –¢–ï–°–¢ –û–¢–ü–†–ê–í–ö–ò:\n');
        
        const testUserId = 999999999;
        const testAmount = 1;
        
        console.log(`–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É ${testAmount} –∑–≤—ë–∑–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${testUserId}...`);
        
        try {
            const result = await starsAgent.sendStarsSafely(testUserId, testAmount, 'test');
            
            if (result.success) {
                console.log('‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω!');
                console.log(`üí¨ ${result.message}`);
            } else {
                console.log('‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à—ë–ª:', result.error);
            }
        } catch (error) {
            console.log('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
        }
        
        console.log('\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...');
        return new Promise(resolve => rl.question('', resolve));
    }

    async run() {
        console.log('üéõÔ∏è –ü–ê–ù–ï–õ–¨ –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ê–ì–ï–ù–¢–û–ú');
        console.log('========================================\n');
        
        await this.loadCurrentSettings();
        
        while (true) {
            const choice = await this.showMainMenu();
            
            switch (choice) {
                case '1':
                    await this.showAgentStats();
                    break;
                case '2':
                    await this.changeLimits();
                    break;
                case '3':
                    await this.changeWorkingHours();
                    break;
                case '4':
                    await this.changeDelays();
                    break;
                case '5':
                    await this.toggleTestMode();
                    break;
                case '6':
                    console.log('\nüîÑ –î–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: git push origin main');
                    break;
                case '7':
                    const logs = await starsAgent.getAgentLogs(10);
                    if (logs.success) {
                        console.log('\nüìù –ü–û–°–õ–ï–î–ù–ò–ï –õ–û–ì–ò:\n');
                        console.log(logs.logs);
                    }
                    console.log('\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è...');
                    await new Promise(resolve => rl.question('', resolve));
                    break;
                case '8':
                    await this.testSending();
                    break;
                case '9':
                    await this.saveSettings();
                    break;
                case '0':
                    console.log('\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!');
                    rl.close();
                    return;
                default:
                    console.log('\n‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞\n');
            }
        }
    }
}

if (require.main === module) {
    const panel = new AgentControlPanel();
    panel.run().catch(console.error);
}

module.exports = { AgentControlPanel };
