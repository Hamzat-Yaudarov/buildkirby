/**
 * –¢–µ—Å—Ç –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –æ–±—ä–µ–¥–∏–Ω—ë–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ø–æ–¥–ø–∏—Å–æ–∫
 */

const db = require('./database');
const { checkUnifiedSubscriptions } = require('./unified-subscription-check');

// Mock bot –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const mockBot = {
    getChatMember: async (channelId, userId) => {
        console.log(`[MOCK] Checking membership for ${channelId}, user ${userId}`);
        
        // –ò–º–∏—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø–æ–¥–ø–∏—Å–æ–∫
        if (channelId.includes('error')) {
            throw new Error('Channel not found');
        }
        
        // –ò–º–∏—Ç–∏—Ä—É–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω —Ç–æ–ª—å–∫–æ –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–∞–Ω–∞–ª—ã
        const subscriptionMap = {
            '@kirbyvivodstars': true,  // –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª - –ø–æ–¥–ø–∏—Å–∞–Ω
            'https://t.me/channel1': false, // SubGram –∫–∞–Ω–∞–ª - –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
            'https://t.me/channel2': true,  // SubGram –∫–∞–Ω–∞–ª - –ø–æ–¥–ø–∏—Å–∞–Ω
        };
        
        const isSubscribed = subscriptionMap[channelId] || false;
        
        return {
            status: isSubscribed ? 'member' : 'left'
        };
    }
};

async function testAllFixes() {
    console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–°–ï–• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô\n');

    try {
        await db.initializeDatabase();
        console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∞\n');

        const testUserId = 123456789;

        // 1. –¢–ï–°–¢: –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤
        console.log('1Ô∏è‚É£ –¢–µ—Å—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤...');
        
        // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
        await db.executeQuery('DELETE FROM subgram_channels WHERE user_id = $1', [testUserId]);
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã –Ω–∞–ø—Ä—è–º—É—é –≤ –ë–î (–∏–º–∏—Ç–∏—Ä—É–µ–º SubGram –æ—Ç–≤–µ—Ç)
        await db.executeQuery(`
            INSERT INTO subgram_channels (user_id, channel_link, channel_name)
            VALUES 
                ($1, 'https://t.me/channel1', 'Test Channel 1'),
                ($1, 'https://t.me/channel2', 'Test Channel 2')
        `, [testUserId]);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥—É–±–ª–∏–∫–∞—Ç–æ–≤)
        const { getAllChannelsToCheck } = require('./unified-subscription-check');
        const channelsData1 = await getAllChannelsToCheck(testUserId);
        const channelsData2 = await getAllChannelsToCheck(testUserId);
        
        console.log(`üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: ${channelsData1.subgramChannels.length} SubGram –∫–∞–Ω–∞–ª–æ–≤`);
        console.log(`üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—Ç–æ—Ä–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: ${channelsData2.subgramChannels.length} SubGram –∫–∞–Ω–∞–ª–æ–≤`);
        
        if (channelsData1.subgramChannels.length === channelsData2.subgramChannels.length) {
            console.log('‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ');
        } else {
            console.log('‚ùå –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ù–ï –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤ —Ä–∞–∑–Ω–æ–µ');
        }
        console.log('');

        // 2. –¢–ï–°–¢: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
        console.log('2Ô∏è‚É£ –¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤...');
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª
        await db.executeQuery(`
            INSERT INTO required_channels (channel_id, channel_name, is_active)
            VALUES ($1, $2, $3)
            ON CONFLICT (channel_id) DO UPDATE SET
                channel_name = $2,
                is_active = $3
        `, ['@kirbyvivodstars', 'Kirby –í—ã–≤–æ–¥ Stars', true]);
        
        const channelsData = await getAllChannelsToCheck(testUserId);
        
        console.log(`üìã –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: ${channelsData.requiredChannels.length}`);
        console.log(`üéØ SubGram –∫–∞–Ω–∞–ª–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: ${channelsData.subgramChannels.length}`);
        console.log(`üìä –í—Å–µ–≥–æ –∫–∞–Ω–∞–ª–æ–≤: ${channelsData.allChannels.length}`);
        
        if (channelsData.requiredChannels.length > 0) {
            console.log('‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è');
            channelsData.requiredChannels.forEach((ch, i) => {
                console.log(`  ${i + 1}. [required] ${ch.name} (${ch.id})`);
            });
        } else {
            console.log('‚ùå –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –ù–ï –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è');
        }
        
        if (channelsData.subgramChannels.length > 0) {
            console.log('‚úÖ SubGram –∫–∞–Ω–∞–ª—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è');
            channelsData.subgramChannels.forEach((ch, i) => {
                console.log(`  ${i + 1}. [subgram] ${ch.name} (${ch.link})`);
            });
        } else {
            console.log('‚ö†Ô∏è SubGram –∫–∞–Ω–∞–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ –æ–∂–∏–¥–∞–µ–º–æ)');
        }
        console.log('');

        // 3. –¢–ï–°–¢: –õ–æ–≥–∏–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        console.log('3Ô∏è‚É£ –¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏...');
        
        const subscriptionResult = await checkUnifiedSubscriptions(mockBot, testUserId, false);
        
        console.log(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫:`);
        console.log(`  ‚Ä¢ –í—Å–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã: ${subscriptionResult.allSubscribed}`);
        console.log(`  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: ${subscriptionResult.channels.length}`);
        console.log(`  ‚Ä¢ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö: ${subscriptionResult.requiredChannels.length}`);
        console.log(`  ‚Ä¢ SubGram: ${subscriptionResult.subgramChannels.length}`);
        console.log(`  ‚Ä¢ –ï—Å—Ç—å –æ—à–∏–±–∫–∏: ${subscriptionResult.hasErrors}`);
        
        console.log('\nüìã –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–æ–∫ –ø–æ –∫–∞–Ω–∞–ª–∞–º:');
        subscriptionResult.channels.forEach((ch, i) => {
            const status = ch.subscribed ? '‚úÖ' : '‚ùå';
            console.log(`  ${i + 1}. ${status} [${ch.type}] ${ch.name}`);
        });
        
        const unsubscribedChannels = subscriptionResult.channels.filter(ch => !ch.subscribed && ch.canCheck);
        
        if (!subscriptionResult.allSubscribed && unsubscribedChannels.length > 0) {
            console.log('‚úÖ –õ–æ–≥–∏–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã');
            console.log(`‚ö†Ô∏è –ù–µ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: ${unsubscribedChannels.length}`);
            unsubscribedChannels.forEach((ch, i) => {
                console.log(`  ${i + 1}. [${ch.type}] ${ch.name}`);
            });
        } else {
            console.log('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã - –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –Ω–µ –Ω—É–∂–Ω–∞');
        }
        console.log('');

        // 4. –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ Enhanced Subscription Message
        console.log('4Ô∏è‚É£ –¢–µ—Å—Ç Enhanced Subscription Message...');
        
        try {
            // –ò–º–∏—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é getEnhancedSubscriptionMessage
            // (–Ω–µ –º–æ–∂–µ–º –≤—ã–∑–≤–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é –∏–∑-–∑–∞ –∑–∞–≤–∏ÔøΩÔøΩ–∏–º–æ—Å—Ç–µ–π –æ—Ç bot)
            
            console.log('üìù –¢–µ—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Enhanced Subscription Message:');
            console.log(`  ‚Ä¢ –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ—Ç–æ–≤—ã: ‚úÖ`);
            console.log(`  ‚Ä¢ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã: ${subscriptionResult.requiredChannels.length}`);
            console.log(`  ‚Ä¢ SubGram –∫–∞–Ω–∞–ª—ã: ${subscriptionResult.subgramChannels.length}`);
            console.log(`  ‚Ä¢ –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –ø–æ —Ç–∏–ø–∞–º —Ä–∞–±–æ—Ç–∞–µ—Ç: ‚úÖ`);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–∞–Ω–∞–ª—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø–æ —Ç–∏–ø–∞–º
            const hasRequiredChannels = subscriptionResult.requiredChannels.length > 0;
            const hasSubgramChannels = subscriptionResult.subgramChannels.length > 0;
            const typesCorrect = subscriptionResult.channels.every(ch => 
                ch.type === 'required' || ch.type === 'subgram'
            );
            
            if (typesCorrect) {
                console.log('‚úÖ –¢–∏–ø—ã –∫–∞–Ω–∞–ª–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã');
            } else {
                console.log('‚ùå –û—à–∏–±–∫–∞ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ —Ç–∏–ø–æ–≤ –∫–∞–Ω–∞–ª–æ–≤');
            }
            
        } catch (error) {
            console.log('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Enhanced Subscription Message:', error.message);
        }
        console.log('');

        // 5. –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
        console.log('5Ô∏è‚É£ –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø');
        console.log('==========================================');
        
        const issues = [];
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã
        if (channelsData1.subgramChannels.length !== channelsData2.subgramChannels.length) {
            issues.push('–î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ Sponsors√Ö');
        }
        
        if (channelsData.requiredChannels.length === 0) {
            issues.push('–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è');
        }
        
        if (subscriptionResult.allSubscribed && unsubscribedChannels.length === 0) {
            console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É - –≤—Å–µ –∫–∞–Ω–∞–ª—ã –ø–æ–¥–ø–∏—Å–∞–Ω—ã');
        }
        
        console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
        if (issues.length === 0) {
            console.log('üéâ –í–°–ï –ü–†–û–ë–õ–ï–ú–´ –ò–°–ü–†–ê–í–õ–ï–ù–´!');
            console.log('‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ');
            console.log('‚úÖ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—åÔøΩÔøΩ—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ');  
            console.log('‚úÖ –õ–æ–≥–∏–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞');
            console.log('‚úÖ –û–±—ä–µ–¥–∏–Ω—ë–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
        } else {
            console.log('‚ö†Ô∏è –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´:');
            issues.forEach((issue, i) => {
                console.log(`  ${i + 1}. ${issue}`);
            });
        }
        
        console.log('\nüéØ –ö–û–ú–ê–ù–î–´ –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –í –ë–û–¢–ï:');
        console.log('‚Ä¢ /check_db_channels - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–Ω–∞–ª—ã –≤ –ë–î');
        console.log('‚Ä¢ /add_test_channel - –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª');
        console.log('‚Ä¢ /test_unified_subs - –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É');

    } catch (error) {
        console.error('\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
        console.error('üìç –°—Ç–µ–∫:', error.stack);
    } finally {
        await db.closeConnection();
        console.log('\nüîí –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∑–∞–∫—Ä—ã—Ç–æ');
    }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    testAllFixes();
}

module.exports = { testAllFixes };
