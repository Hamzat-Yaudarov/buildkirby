/**
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã SubGram: "–î–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –í–∞—à–µ–º –±–æ—Ç–µ"
 * –ü—Ä–æ–±–ª–µ–º–∞: API –∫–ª—é—á –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–ª–∏ –±–æ—Ç –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ SubGram
 */

const db = require('./database');
const axios = require('axios');

async function fixSubGramAPIKeyProblem() {
    console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú–´ SUBGRAM API –ö–õ–Æ–ß–ê\n');
    console.log('‚ùå –û—à–∏–±–∫–∞: "–î–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –í–∞—à–µ–º –±–æ—Ç–µ"\n');

    try {
        await db.initializeDatabase();

        // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π API –∫–ª—é—á
        console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ API –∫–ª—é—á–∞...');
        const settings = await db.getSubGramSettings();
        
        if (!settings) {
            console.log('‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ SubGram –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
            return;
        }

        console.log('üìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
        console.log(`  ‚Ä¢ API –∫–ª—é—á: ${settings.api_key ? settings.api_key.substring(0, 20) + '...' : '–ù–ï–¢'}`);
        console.log(`  ‚Ä¢ API URL: ${settings.api_url}`);
        console.log(`  ‚Ä¢ –í–∫–ª—é—á–µ–Ω–æ: ${settings.enabled}`);
        console.log('');

        // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∫–ª—é—á —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        console.log('2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∫–ª—é—á–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏...');
        
        const testUsers = [
            { id: '7972065986', name: '–ê–¥–º–∏–Ω' },
            { id: '7961237966', name: '–ü—Ä–æ–±–ª–µ–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' },
            { id: '123456789', name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å' },
            { id: '1', name: '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π ID' }
        ];

        let workingUsers = [];
        let errorMessages = new Set();

        for (const testUser of testUsers) {
            console.log(`\nüß™ –¢–µ—Å—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${testUser.name} (ID: ${testUser.id})...`);
            
            try {
                const response = await axios.post(settings.api_url, {
                    UserId: testUser.id,
                    ChatId: testUser.id,
                    MaxOP: 1,
                    action: "subscribe",
                    exclude_channel_ids: []
                }, {
                    headers: {
                        'Auth': settings.api_key,
                        'Content-Type': 'application/json'
                    },
                    timeout: 10000
                });

                console.log(`‚úÖ –£—Å–ø–µ—Ö! –°—Ç–∞—Ç—É—Å: ${response.data.status}, –ö–æ–¥: ${response.data.code}`);
                workingUsers.push(testUser);
                
                if (response.data.links && response.data.links.length > 0) {
                    console.log(`üéâ –ù–∞–π–¥–µ–Ω—ã –∫–∞–Ω–∞–ª—ã: ${response.data.links.length}`);
                }

            } catch (error) {
                if (error.response && error.response.data) {
                    const errorData = error.response.data;
                    console.log(`‚ùå –û—à–∏–±–∫–∞: ${errorData.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
                    errorMessages.add(errorData.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
                } else {
                    console.log(`‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞: ${error.message}`);
                }
            }
        }

        // 3. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        console.log('\n3Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...');
        console.log(`‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: ${workingUsers.length}/${testUsers.length}`);
        
        if (workingUsers.length === 0) {
            console.log('\nüö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: API –∫–ª—é—á –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!');
            console.log('\nüìã –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏:');
            errorMessages.forEach((msg, index) => {
                console.log(`  ${index + 1}. ${msg}`);
            });
            
            // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
            const errorArray = Array.from(errorMessages);
            
            if (errorArray.some(msg => msg.includes('–Ω–µ—Ç –≤ –í–∞—à–µ–º –±–æ—Ç–µ'))) {
                console.log('\nüéØ –î–ò–ê–ì–ù–û–ó: API –∫–ª—é—á –æ—Ç –¥—Ä—É–≥–æ–≥–æ –±–æ—Ç–∞ –∏–ª–∏ –±–æ—Ç –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ SubGram');
                console.log('\nüîß –†–ï–®–ï–ù–ò–Ø:');
                console.log('1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://subgram.ru');
                console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤–∞—à –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –±–æ—Ç–æ–≤');
                console.log('3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ API –∫–ª—é—á –∏–º–µ–Ω–Ω–æ –æ—Ç –≤–∞—à–µ–≥–æ –±–æ—Ç–∞');
                console.log('4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω "–° –¢–û–ö–ï–ù–û–ú"');
            }
            
            if (errorArray.some(msg => msg.includes('API Key'))) {
                console.log('\nüéØ –î–ò–ê–ì–ù–û–ó: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π API –∫–ª—é—á');
                console.log('\nüîß –†–ï–®–ï–ù–ò–Ø:');
                console.log('1. –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–π API –∫–ª—é—á –≤ SubGram –ø–∞–Ω–µ–ª–∏');
                console.log('2. –û–±–Ω–æ–≤–∏—Ç–µ –∫–ª—é—á –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±–æ—Ç–∞');
            }
            
            if (errorArray.some(msg => msg.includes('–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü'))) {
                console.log('\nüéØ –î–ò–ê–ì–ù–û–ó: –ü—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π');
                console.log('\nüîß –†–ï–®–ï–ù–ò–Ø:');
                console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ SubGram');
                console.log('2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –≤ SubGram –ø–∞–Ω–µ–ª–∏');
            }
            
        } else if (workingUsers.length < testUsers.length) {
            console.log('\n‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: API —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
            console.log('\n‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
            workingUsers.forEach(user => console.log(`  ‚Ä¢ ${user.name} (${user.id})`));
            
        } else {
            console.log('\n‚úÖ API –∫–ª—é—á —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–ª—è –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!');
            console.log('‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±–æ—Ç–∞');
        }

        // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ –≤ SubGram...');
        try {
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
            const botInfoResponse = await axios.get('https://api.subgram.ru/bot-info/', {
                headers: {
                    'Auth': settings.api_key,
                    'Content-Type': 'application/json'
                },
                timeout: 10000
            });

            console.log('‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ –ø–æ–ª—É—á–µ–Ω–∞:');
            console.log(JSON.stringify(botInfoResponse.data, null, 2));

        } catch (botInfoError) {
            console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ');
            if (botInfoError.response && botInfoError.response.data) {
                console.log(`‚ùå –û—à–∏–±–∫–∞: ${JSON.stringify(botInfoError.response.data, null, 2)}`);
            }
        }

        // 5. –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–µ—à–µ–Ω–∏—è
        console.log('\n5Ô∏è‚É£ –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ï –î–ï–ô–°–¢–í–ò–Ø:');
        console.log('========================================');
        
        if (workingUsers.length === 0) {
            console.log('üö® –°–†–û–ß–ù–û - API –∫–ª—é—á –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:');
            console.log('');
            console.log('1. üåê –ó–∞–π–¥–∏—Ç–µ –Ω–∞ https://subgram.ru');
            console.log('2. üîë –í–æ–π–¥–∏—Ç–µ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å');
            console.log('3. ü§ñ –ù–∞–π–¥–∏—Ç–µ –≤–∞—à –±–æ—Ç –≤ —Å–ø–∏—Å–∫–µ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ');
            console.log('4. üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ API –∫–ª—é—á –ò–ú–ï–ù–ù–û –æ—Ç –≤–∞—à–µ–≥–æ –±–æ—Ç–∞');
            console.log('5. üîß –û–±–Ω–æ–≤–∏—Ç–µ –∫ÔøΩÔøΩ—é—á –∫–æ–º–∞–Ω–¥–æ–π –Ω–∏–∂–µ');
            console.log('');
            console.log('üí° –í–ê–ñ–ù–û: –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:');
            console.log('  ‚Ä¢ –ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ SubGram');
            console.log('  ‚Ä¢ –ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω "–° –¢–û–ö–ï–ù–û–ú"');
            console.log('  ‚Ä¢ API –∫–ª—é—á —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é');
            console.log('  ‚Ä¢ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –≤ SubGram –ø–∞–Ω–µ–ª–∏');
            
        } else {
            console.log('‚úÖ API –∫–ª—é—á —á–∞—Å—Ç–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç');
            console.log('‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö');
            console.log('');
            console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ SubGram');
            console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –ø–æ–ª—É—á–∞—Ç—å –∫–∞–Ω–∞–ª—ã');
            console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–∏–º–∏—Ç—ã –≤ SubGram –ø–∞–Ω–µ–ª–∏');
        }

        // 6. –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è API –∫–ª—é—á–∞
        console.log('\n6Ô∏è‚É£ –ö–û–ú–ê–ù–î–´ –î–õ–Ø –û–ë–ù–û–í–õ–ï–ù–ò–Ø:');
        console.log('========================================');
        console.log('');
        console.log('–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –Ω–æ–≤—ã–π API –∫–ª—é—á, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ SQL:');
        console.log('```sql');
        console.log(`UPDATE subgram_settings SET api_key = '–í–ê–®_–ù–û–í–´–ô_API_–ö–õ–Æ–ß';`);
        console.log('```');
        console.log('');
        console.log('–ò–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç–µ SubGram:');
        console.log('```sql');
        console.log('UPDATE subgram_settings SET enabled = false;');
        console.log('```');
        console.log('');
        console.log('–ê–¥–º–∏–Ω –∫–æ–º–∞–Ω–¥—ã:');
        console.log('‚Ä¢ /admin_subgram_disable - –æ—Ç–∫–ª—é—á–∏—Ç—å SubGram');
        console.log('‚Ä¢ /admin_subgram_test - –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —Ç–µ—Å—Ç');
        console.log('‚Ä¢ /fix_subgram_sponsors - –ø–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞');

        // 7. –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        console.log('\n7Ô∏è‚É£ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
        
        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        await db.logSubGramAPIRequest(
            7972065986, // –∞–¥–º–∏–Ω
            'api_key_diagnostic',
            { diagnostic: true, testUsers: testUsers.length },
            { workingUsers: workingUsers.length, totalErrors: errorMessages.size },
            workingUsers.length > 0,
            workingUsers.length === 0 ? 'API key completely broken' : null
        );

        console.log('‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
        console.log('');
        console.log('üìû –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ —Ä–µ—à–∞–µ—Ç—Å—è:');
        console.log('‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É SubGram');
        console.log('‚Ä¢ –£–∫–∞–∂–∏—Ç–µ –≤–∞—à API –∫–ª—é—á –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã');
        console.log('‚Ä¢ –ü—Ä–∏–ª–æ–∂–∏—Ç–µ –ª–æ–≥–∏ –æ—à–∏–±–æ–∫');

    } catch (error) {
        console.error('\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:', error.message);
        console.error('üìç –°—Ç–µ–∫:', error.stack);
    } finally {
        await db.closeConnection();
        console.log('\nüîí –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î –∑–∞–∫—Ä—ã—Ç–æ');
    }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
    fixSubGramAPIKeyProblem();
}

module.exports = { fixSubGramAPIKeyProblem };
