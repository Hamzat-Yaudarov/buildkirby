const SubGram = require('./subgram');
const config = require('./config');

async function testSubGram() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SubGram API...');
    console.log('API –∫–ª—é—á:', config.SUBGRAM_API_KEY ? '–Ω–∞—Å—Ç—Ä–æ–µ–Ω' : '–ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    
    // –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ –ª–æ–≥–æ–≤
    const userId = 7038575557;
    const chatId = 7038575557;
    const firstName = '$LABRüêïAme';
    
    try {
        console.log('\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏...');
        const result1 = await SubGram.checkSubscription(userId, chatId, firstName, 'ru', false);
        console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', JSON.stringify(result1, null, 2));
        
        if (result1.status === 'warning') {
            console.log('\n2Ô∏è‚É£ –°—Ç–∞—Ç—É—Å warning - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å—Å—ã–ª–∫–∏...');
            const result2 = await SubGram.getChannelLinks(userId, chatId, firstName, 'ru', false);
            console.log('–°—Å—ã–ª–∫–∏:', JSON.stringify(result2, null, 2));
        }
        
        console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–¥–∞–Ω–∏–π...');
        const result3 = await SubGram.getTaskChannels(userId, chatId, firstName, 'ru', false);
        console.log('–ó–∞–¥–∞–Ω–∏—è:', JSON.stringify(result3, null, 2));
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
    }
}

testSubGram();
