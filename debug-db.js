const { Pool } = require('pg');
const config = require('./config');

const pool = new Pool({
    connectionString: config.DATABASE_URL,
    ssl: {
        rejectUnauthorized: false
    }
});

async function debugDatabase() {
    try {
        console.log('üîç –û—Ç–ª–∞–¥–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        const time = await pool.query('SELECT NOW()');
        console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', time.rows[0].now);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        const tables = await pool.query(`
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public'
        `);
        console.log('üìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã:', tables.rows.map(r => r.table_name));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã users (–µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å)
        try {
            const columns = await pool.query(`
                SELECT column_name, data_type 
                FROM information_schema.columns 
                WHERE table_name = 'users' AND table_schema = 'public'
                ORDER BY ordinal_position
            `);
            console.log('üìä –°—Ç–æ–ª–±—Ü—ã —Ç–∞–±–ª–∏—Ü—ã users:', columns.rows);
        } catch (e) {
            console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ users –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Å—Ö–µ–º—ã
        const schemas = await pool.query(`
            SELECT schema_name 
            FROM information_schema.schemata
        `);
        console.log('üóÇÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ö–µ–º—ã:', schemas.rows.map(r => r.schema_name));
        
        process.exit(0);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ª–∞–¥–∫–∏:', error);
        process.exit(1);
    }
}

debugDatabase();
